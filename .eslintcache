[{"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\index.js":"1","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\App.js":"2","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\reportWebVitals.js":"3","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\ReactRouter.js":"4","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\EditPet.js":"5","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\AddPet.js":"6","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\PetProfile.js":"7","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\Search.js":"8","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\Intro.js":"9","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\Login.js":"10","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\MyPets.js":"11","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\RepeatingComponents\\Navbar.js":"12","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\MyInfo.js":"13","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\RepeatingComponents\\Loading.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":313,"mtime":1611346073568,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":982,"mtime":1611612582480,"results":"19","hashOfConfig":"16"},{"size":7191,"mtime":1611676666108,"results":"20","hashOfConfig":"16"},{"size":6510,"mtime":1611672371165,"results":"21","hashOfConfig":"16"},{"size":5949,"mtime":1611673691419,"results":"22","hashOfConfig":"16"},{"size":1644,"mtime":1611345360458,"results":"23","hashOfConfig":"16"},{"size":940,"mtime":1611612679728,"results":"24","hashOfConfig":"16"},{"size":5371,"mtime":1611612582466,"results":"25","hashOfConfig":"16"},{"size":3147,"mtime":1611613182199,"results":"26","hashOfConfig":"16"},{"size":1572,"mtime":1611612582468,"results":"27","hashOfConfig":"16"},{"size":4421,"mtime":1611676343078,"results":"28","hashOfConfig":"16"},{"size":397,"mtime":1611612582467,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1tu82hk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\index.js",[],["63","64"],"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\App.js",[],"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\reportWebVitals.js",[],"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\ReactRouter.js",[],"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\EditPet.js",["65"],"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\AddPet.js",["66"],"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\PetProfile.js",["67"],"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\Search.js",["68","69"],"import axios from 'axios'\r\nimport * as React from 'react'\r\nimport Navbar from '../RepeatingComponents/Navbar'\r\nimport { Button, Input } from '@material-ui/core';\r\n\r\nlet dogsImagesArray = []\r\nlet key=0\r\n\r\nconst showImages = (imageLink) => {\r\n        return (\r\n            <img style={{float:'left',marginTop:'10px',marginLeft:'20px',marginRight:'20px',width: 100, height: 100 }} key={key++} src={imageLink} alt='dog image' />\r\n        )\r\n    \r\n    \r\n}\r\n\r\n\r\nconst Search = () => {\r\n\r\n    const [dogBreed, setBreed] = React.useState('')\r\n    const [fullArray,setFullArray]=React.useState(false)\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Input type='text' placeholder=\"dog breed...\" onChange={(event) => { setBreed(event.currentTarget.value) }} />\r\n            <Button onClick={async () => {\r\n\r\n                await axios({\r\n                    method: \"GET\",\r\n                    url: `https://dog.ceo/api/breed/${dogBreed}/images`\r\n\r\n                    })\r\n                    .then((responseJson) => {\r\n                        if (responseJson.data.status === 'success') {\r\n                            dogsImagesArray = responseJson.data.message\r\n                            setFullArray(true)\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        if (err)\r\n                            console.log('error is:\\n' + err)\r\n                    })\r\n\r\n            }}>SEARCH</Button>\r\n            <div>\r\n            {\r\n                dogsImagesArray.map(showImages)\r\n            }\r\n            </div>\r\n            <Navbar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n\r\n\r\n\r\n","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\Intro.js",[],"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\Login.js",["70","71","72","73","74","75"],"import { Button } from '@material-ui/core'\r\nimport * as React from 'react';\r\nimport '../../App.css';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Joi from 'joi-browser';\r\n\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = React.useState('');\r\n    const [pass, setPass] = React.useState(null);\r\n    const [errors, setError] = React.useState({});\r\n\r\n\r\n    const joiSchema = {\r\n        email: Joi.string().email().required(),\r\n        pass: Joi.string().required()\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n\r\n        const our_data = {\r\n            email: email,\r\n            pass: pass,\r\n        }\r\n        let errors = {};\r\n\r\n        //chack valid form inputs\r\n        const valid = Joi.validate(our_data, joiSchema, {\r\n            abortEarly: false\r\n        });\r\n        if (valid.error) {\r\n            valid.error.details.forEach(err => {\r\n                console.log(err.message);\r\n                if (err.message == '\"email\" is not allowed to be empty') {\r\n                    errors[\"email\"] = \"* Email is required.\";\r\n                }\r\n                else if (err.message == '\"email\" must be a valid email') {\r\n                    errors[\"email\"] = \"* Invalid Email\";\r\n                }\r\n                if (err.message == '\"pass\" is not allowed to be empty') {\r\n                    errors[\"pass\"] = \"* Password is required.\";\r\n                }\r\n            })\r\n            setError(errors);\r\n            return;\r\n        }\r\n        //ok:\r\n        else {\r\n            axios({\r\n                method: 'POST',\r\n                url: 'https://petwalkapp.herokuapp.com/users/login',\r\n                data: {\r\n                    \"email\": email,\r\n                    \"pass\": pass\r\n                }\r\n            })\r\n                .then((data) => {\r\n                    console.log(data.data.token);\r\n                    localStorage.setItem(\"token\", data.data.token);\r\n                    window.location.href = \"/myInfo\";\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response);\r\n                    let errors = {};\r\n                    if (error.response.status == Number(401)) {\r\n                        errors[\"email\"] = \"* Email not found\";\r\n                    }\r\n                    if (error.response.status == Number(400)) {\r\n                        console.log(error.response.status);\r\n                        errors[\"psss\"] = \"* Password incorrect\";\r\n                    }\r\n                    if (error.response.status == 500) {\r\n                        alert(\"Server Error , Try later\");\r\n                    }\r\n                    setError(errors);\r\n                    return;\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main className=\"container-fluid\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <div className=\"text-center\">\r\n                            <h1 className=\" m-4 pt-4\">Login</h1>\r\n                            <div style={{ maxWidth: '50px', maxheight: '50px', backgroundColor: '#ffffff', borderRadius: '50%' }}>\r\n                            </div>\r\n                            <img src=\"https://banner2.cleanpng.com/20181231/fta/kisspng-computer-icons-user-profile-portable-network-graph-circle-svg-png-icon-free-download-5-4714-onli-5c2a3809d6e8e6.1821006915462707298803.jpg\"\r\n                                alt=\"Avatar\" style={{ maxWidth: '30%', borderRadius: '50%' }} />\r\n                        </div>\r\n\r\n                        <form>\r\n                            <div className=\"form_div pb-4 pt-4\">\r\n                                <label>Email:</label>\r\n                                <input type=\"text\" id=\"id_email\" className=\"form-control form-control-lg\" onChange={(event) => { setEmail(event.target.value) }}\r\n                                    style={{ borderColor: '#ffffff' }} />\r\n                                <div className=\"text-danger\">{errors.email}</div>\r\n                            </div>\r\n                            <div className=\"form_div pb-2\">\r\n                                <label>Password:</label>\r\n                                <input type=\"password\" id=\"id_pass\" className=\"form-control form-control-lg\" onChange={(event) => { setPass(event.target.value) }}\r\n                                    style={{ bordercolor: '#ffffff' }} />\r\n                                <div className=\"text-danger\">{errors.pass}</div>\r\n                            </div>\r\n                            <Button onClick={handleClick} className=\"btn btn-lg btn-block btns my-4 w-100\">Login</Button>\r\n                        </form>\r\n\r\n                        <div className=\"row pt-4 justify-content-center text-center\">\r\n                            <div className=\"col-4 \" style={{ backgroundColor: '#727377', height: '3px' }}> </div>\r\n                            <p className=\"pt-2\">Don't have an Account! <NavLink to='/register'>Sign Up Here</NavLink></p>\r\n                            <p>Forgot <NavLink to='/helpPage'>Password?</NavLink></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\MyPets.js",["76"],"import * as React from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from '../RepeatingComponents/Navbar'\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { NavLink } from 'react-router-dom';\r\nimport MediaQuery from 'react-responsive'\r\n\r\nconst showPets = (item) => {\r\n    return (\r\n        <div key={item._id} style={{ display: 'flex', position: 'relative', marginTop: '20px', backgroundImage: 'linear-gradient(to right,gray,lightgray)', width: '30%', borderRadius: '10px', borderStyle: 'solid', borderColor: 'lightskyblue', borderWidth: '5px' }}>\r\n            <img style={{ display: 'block', position: 'relative', width: '3cm', height: '3cm', borderRadius: '10px', left: '10%', marginTop: '20px' }} alt='cute dog' src={item.img} />\r\n            <div style={{ display: 'block', position: 'absolute', flexDirection: 'column', marginTop: '20px', left: '50%' }} >\r\n                <text style={{ display: 'flex' }} > name: {item.name}  </text>\r\n                \r\n                <text style={{ display: 'flex' }} > type: {item.type}  </text>\r\n                \r\n                <text style={{ display: 'flex' }} > age: {item.age} </text>\r\n            </div>\r\n            <NavLink to='/petProfile' onClick={() => {\r\n                localStorage.setItem('dogId', item._id);\r\n            }} style={{ display: 'block', position: 'absolute',right:'0.5cm', top: '1.5cm', width: '20px', height: '20px' }} ><ChevronRightIcon style={{ color: 'blue' }} /></NavLink>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst MyPets = () => {\r\n\r\n    const [pets, setPets] = React.useState([])\r\n\r\n\r\n    //getting all the data of a specific user\r\n\r\n    React.useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://petwalkapp.herokuapp.com/pets/ofUser',\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then((data) => {\r\n                setPets(data.data)\r\n                return\r\n            })\r\n            .catch((err) => {\r\n                if (err)\r\n                    console.log(err)\r\n\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n\r\n        <Grid style={{backgroundColor:'lightgray'}} >\r\n            <h1 style={{ display: 'block', position: 'absolute', width: '10%', top: '1.5cm', left: '15%' }}>My Pets</h1>\r\n            <div style={{ display: 'flex', width: '100%', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-evenly' }} /*className='general-container'*/ >\r\n                {\r\n                    pets.map(showPets)\r\n                }\r\n                <NavLink namePage={'myPets'} to='/addPet' ><Button style={{ backgroundColor: 'blue', color: 'white', marginTop: '1.5cm',marginBottom:'2cm', borderRadius: '50%', height: '55px', fontSize: '20px' }} >+</Button></NavLink>\r\n                <Navbar />\r\n            </div>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default MyPets\r\n\r\n\r\n/*<div style={{ display: 'flex', position: 'absolute', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', backgroundColor: 'lightgray' }}>*/\r\n\r\n/*</div>*/","C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\RepeatingComponents\\Navbar.js",[],"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\MainComponents\\MyInfo.js",["77","78","79","80"],"C:\\Users\\Or\\Desktop\\DCS 2020 final project\\pet_walk_client\\src\\Components\\RepeatingComponents\\Loading.js",["81","82"],"import * as React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div></div>\r\n            <div className=\"text-center mr-3 w-100\">\r\n                <img src=\"images/loading-dog.gif\" width=\"200\" />\r\n            </div>\r\n            <div></div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Loading",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":65,"column":17,"nodeType":"89","endLine":65,"endColumn":115},{"ruleId":"87","severity":1,"message":"88","line":30,"column":17,"nodeType":"89","endLine":30,"endColumn":115},{"ruleId":"90","severity":1,"message":"91","line":24,"column":12,"nodeType":"92","messageId":"93","endLine":24,"endColumn":21},{"ruleId":"87","severity":1,"message":"88","line":11,"column":13,"nodeType":"89","endLine":11,"endColumn":166},{"ruleId":"90","severity":1,"message":"94","line":21,"column":12,"nodeType":"92","messageId":"93","endLine":21,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":37,"column":33,"nodeType":"97","messageId":"98","endLine":37,"endColumn":35},{"ruleId":"95","severity":1,"message":"96","line":40,"column":38,"nodeType":"97","messageId":"98","endLine":40,"endColumn":40},{"ruleId":"95","severity":1,"message":"96","line":43,"column":33,"nodeType":"97","messageId":"98","endLine":43,"endColumn":35},{"ruleId":"95","severity":1,"message":"96","line":68,"column":47,"nodeType":"97","messageId":"98","endLine":68,"endColumn":49},{"ruleId":"95","severity":1,"message":"96","line":71,"column":47,"nodeType":"97","messageId":"98","endLine":71,"endColumn":49},{"ruleId":"95","severity":1,"message":"96","line":75,"column":47,"nodeType":"97","messageId":"98","endLine":75,"endColumn":49},{"ruleId":"90","severity":1,"message":"99","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":36,"column":8,"nodeType":"102","endLine":36,"endColumn":10,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"104","line":39,"column":51,"nodeType":"97","messageId":"98","endLine":39,"endColumn":53},{"ruleId":"95","severity":1,"message":"96","line":44,"column":22,"nodeType":"97","messageId":"98","endLine":44,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":52,"column":27,"nodeType":"97","messageId":"98","endLine":52,"endColumn":29},{"ruleId":"90","severity":1,"message":"105","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":10,"column":17,"nodeType":"89","endLine":10,"endColumn":65},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'dogWeight' is assigned a value but never used.","Identifier","unusedVar","'fullArray' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MediaQuery' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["110"],"Expected '!==' and instead saw '!='.","'NavLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [data]",{"range":"113","text":"114"},[1288,1290],"[data]"]