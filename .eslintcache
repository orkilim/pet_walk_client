[{"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\index.js":"1","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\reportWebVitals.js":"2","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\App.js":"3","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\ReactRouter.js":"4","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Intro.js":"5","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\AddPet.js":"6","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\MyInfo.js":"7","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\EditPet.js":"8","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Login.js":"9","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\MyPets.js":"10","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\MyCommunity.js":"11","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\AddCommunity.js":"12","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\Community.js":"13","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Chart.js":"14","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\RepeatingComponents\\Loading.js":"15","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\RepeatingComponents\\Navbar.js":"16","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\RepeatingComponents\\SearchClass.js":"17","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\CommunityList.js":"18","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\CommunityItem.js":"19","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\FooterMyCommunity.js":"20","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\FooterCommunity.js":"21","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Pet404.js":"22","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Propess.js":"23","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\SearchApi\\SearchList.js":"24","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\SearchApi\\SearchItem.js":"25","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\SearchApi\\Search.js":"26","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Profile\\PetProfile.js":"27","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Profile\\AcordionProfile.js":"28"},{"size":517,"mtime":1613041233273,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1613041233273,"results":"31","hashOfConfig":"30"},{"size":329,"mtime":1613041233261,"results":"32","hashOfConfig":"30"},{"size":1490,"mtime":1613244553287,"results":"33","hashOfConfig":"30"},{"size":940,"mtime":1613041233268,"results":"34","hashOfConfig":"30"},{"size":13255,"mtime":1613653342044,"results":"35","hashOfConfig":"30"},{"size":16827,"mtime":1613226019477,"results":"36","hashOfConfig":"30"},{"size":11991,"mtime":1613649238670,"results":"37","hashOfConfig":"30"},{"size":5490,"mtime":1613225064106,"results":"38","hashOfConfig":"30"},{"size":5330,"mtime":1613414897642,"results":"39","hashOfConfig":"30"},{"size":7942,"mtime":1613653284189,"results":"40","hashOfConfig":"30"},{"size":8168,"mtime":1613650357627,"results":"41","hashOfConfig":"30"},{"size":2447,"mtime":1613079278807,"results":"42","hashOfConfig":"30"},{"size":763,"mtime":1613041233263,"results":"43","hashOfConfig":"30"},{"size":397,"mtime":1613041233270,"results":"44","hashOfConfig":"30"},{"size":1578,"mtime":1613041233271,"results":"45","hashOfConfig":"30"},{"size":688,"mtime":1613061738665,"results":"46","hashOfConfig":"30"},{"size":456,"mtime":1613225203857,"results":"47","hashOfConfig":"30"},{"size":1724,"mtime":1613171447032,"results":"48","hashOfConfig":"30"},{"size":502,"mtime":1613078962120,"results":"49","hashOfConfig":"30"},{"size":808,"mtime":1613225527683,"results":"50","hashOfConfig":"30"},{"size":490,"mtime":1613063218800,"results":"51","hashOfConfig":"30"},{"size":873,"mtime":1613226636820,"results":"52","hashOfConfig":"30"},{"size":320,"mtime":1613242512131,"results":"53","hashOfConfig":"30"},{"size":499,"mtime":1613242815895,"results":"54","hashOfConfig":"30"},{"size":5507,"mtime":1613244017264,"results":"55","hashOfConfig":"30"},{"size":12848,"mtime":1613244689162,"results":"56","hashOfConfig":"30"},{"size":2759,"mtime":1613244479796,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1yj0eon",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\index.js",[],["125","126"],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\reportWebVitals.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\App.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\ReactRouter.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Intro.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\AddPet.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\MyInfo.js",["127","128"],"import * as React from 'react';\r\nimport axios from 'axios';\r\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\r\nimport ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded';\r\nimport Navbar from '../RepeatingComponents/Navbar';\r\nimport Loading from '../RepeatingComponents/Loading';\r\nimport Swal from 'sweetalert2';\r\nimport Chart from './Chart';\r\n\r\n\r\n\r\nconst MyInfo = () => {\r\n    const [myPets, setMyPets] = React.useState([]);\r\n    const [data, setData] = React.useState(false); // data retrieved from the server(y\\n)\r\n    const [petIndex, setPetIndex] = React.useState(0); // index from myPets array \r\n    //elements thet can be updete in this page :\r\n    const [activity, setActiviry] = React.useState(0);\r\n    const [plan, setPlan] = React.useState(0);\r\n    const [food, setFood] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        console.log(data);\r\n        //ok user then do server call:\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://petwalkapp.herokuapp.com/pets/ofUser',\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then((data) => {\r\n                console.log(data.data);\r\n                setMyPets(data.data);\r\n                setActiviry(data.data[petIndex].currActivityLevel);\r\n                setPlan(data.data[petIndex].currDayPlanLevel);\r\n                setFood(data.data[petIndex].currFoodLevel);\r\n                setData(true);\r\n                return;\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                return;\r\n            })\r\n    }, [])\r\n\r\n    //Click and render the pet in the array :\r\n    const handleClick = () => {\r\n        if (petIndex === 0) {\r\n            setPetIndex(myPets.length - 1);\r\n            setActiviry(myPets[myPets.length - 1].currDayPlanLevel);\r\n            setPlan(myPets[myPets.length - 1].currDayPlanLevel);\r\n            setFood(myPets[myPets.length - 1].currFoodLevel);\r\n        }\r\n        if (petIndex > 0) {\r\n            setPetIndex(petIndex - 1);\r\n            setActiviry(myPets[petIndex - 1].currDayPlanLevel);\r\n            setPlan(myPets[petIndex - 1].currDayPlanLevel);\r\n            setFood(myPets[petIndex - 1].currFoodLevel);\r\n        }\r\n    }\r\n\r\n    const handleClickRight = () => {\r\n        if (petIndex === myPets.length - 1) {\r\n            setPetIndex(0);\r\n            setActiviry(myPets[myPets.length - 1].currDayPlanLevel);\r\n            setPlan(myPets[myPets.length - 1].currDayPlanLevel);\r\n            setFood(myPets[myPets.length - 1].currFoodLevel);\r\n        }\r\n        if (petIndex >= 0 && petIndex < myPets.length - 1) {\r\n            setPetIndex(petIndex + 1);\r\n            setActiviry(myPets[petIndex + 1].currDayPlanLevel);\r\n            setPlan(myPets[petIndex + 1].currDayPlanLevel);\r\n            setFood(myPets[petIndex + 1].currFoodLevel);\r\n        }\r\n    }\r\n\r\n    const upadteActivity = async (level) => {\r\n        //update in db :\r\n        let dataBodyVal = {\r\n            id: myPets[petIndex]._id, //requird for edting in server \r\n            name: myPets[petIndex].name,\r\n            type: myPets[petIndex].type,\r\n            dayPlan: myPets[petIndex].dayPlan,\r\n            dayPlanLevel: myPets[petIndex].dayPlanLevel,\r\n            activityLevel: myPets[petIndex].activityLevel,\r\n            foodLevel: myPets[petIndex].foodLevel,\r\n            currActivityLevel: Number(level)\r\n        }\r\n\r\n        //update\r\n        await axios({\r\n            method: 'PUT',\r\n            url: \"https://petwalkapp.herokuapp.com/pets\",\r\n            data: dataBodyVal,\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then(myData => {\r\n                setActiviry(dataBodyVal.currActivityLevel);\r\n                return;\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                if (error.response.status === 404) {\r\n                    alert(error.response);\r\n                }\r\n                if (error.response.status === 500) {\r\n                    alert(\"Server Error , Try later\");\r\n                }\r\n                return;\r\n            })\r\n    }\r\n\r\n    const upadtePlan = async (level) => {\r\n        //update in db :\r\n        let dataBodyVal = {\r\n            id: myPets[petIndex]._id, //requird for edting in server \r\n            name: myPets[petIndex].name,\r\n            type: myPets[petIndex].type,\r\n            dayPlan: myPets[petIndex].dayPlan,\r\n            dayPlanLevel: myPets[petIndex].dayPlanLevel,\r\n            activityLevel: myPets[petIndex].activityLevel,\r\n            foodLevel: myPets[petIndex].foodLevel,\r\n            currDayPlanLevel: Number(level)\r\n        }\r\n\r\n        //update\r\n        await axios({\r\n            method: 'PUT',\r\n            url: \"https://petwalkapp.herokuapp.com/pets\",\r\n            data: dataBodyVal,\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then(myData => {\r\n                setPlan(dataBodyVal.currDayPlanLevel);\r\n                return;\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                if (error.response.status === 404) {\r\n                    alert(error.response);\r\n                }\r\n                if (error.response.status === 500) {\r\n                    alert(\"Server Error , Try later\");\r\n                }\r\n                return;\r\n            })\r\n    }\r\n\r\n    const goodJob = () => {\r\n        //say Goog Jub:\r\n        Swal.fire({\r\n            title: 'Goog Jub',\r\n            width: 600,\r\n            padding: '3em',\r\n            background: '#fff url(/images/good-job.jpg) ',\r\n            backdrop: `\r\n                      rgba(0,0,123,0.4)\r\n                      url(\"/images/good.gif\")`\r\n        })\r\n\r\n    }\r\n\r\n    const upadteFood = async (level) => {\r\n        //update in db :\r\n        let dataBodyVal = {\r\n            id: myPets[petIndex]._id, //requird for edting in server \r\n            name: myPets[petIndex].name,\r\n            type: myPets[petIndex].type,\r\n            dayPlan: myPets[petIndex].dayPlan,\r\n            dayPlanLevel: myPets[petIndex].dayPlanLevel,\r\n            activityLevel: myPets[petIndex].activityLevel,\r\n            foodLevel: myPets[petIndex].foodLevel,\r\n            currFoodLevel: Number(level)\r\n        }\r\n\r\n        //update\r\n        await axios({\r\n            method: 'PUT',\r\n            url: \"https://petwalkapp.herokuapp.com/pets\",\r\n            data: dataBodyVal,\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then(myData => {\r\n                setFood(dataBodyVal.currFoodLevel);\r\n                return;\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                if (error.response.status === 404) {\r\n                    alert(error.response);\r\n                }\r\n                if (error.response.status === 500) {\r\n                    alert(\"Server Error , Try later\");\r\n                }\r\n                return;\r\n            })\r\n    }\r\n\r\n    const onClickPlay = async () => {\r\n        Swal.mixin({\r\n            input: 'text',\r\n            confirmButtonText: 'Next &rarr;',\r\n            showCancelButton: true,\r\n            progressSteps: ['1', '2', '3']\r\n        }).queue([\r\n            {\r\n                title: 'Where we play?',\r\n                text: 'Garden, park, house, with friends'\r\n            },\r\n            'Playing time',\r\n            'Energy level'\r\n        ]).then((result) => {\r\n            if (Number(result.value[1]) > 100 || Number(result.value[1]) < 0) {\r\n                Swal.fire({\r\n                    title: 'Energy level Must be Number Between 1-100',\r\n                    confirmButtonText: 'Try Agin'\r\n                })\r\n                return;\r\n            }\r\n            if (result.value) {\r\n                const answers = JSON.stringify(result.value)\r\n                Swal.fire({\r\n                    title: 'All done!',\r\n                    html: `\r\n                Your Day Play:\r\n                <pre><code>${answers}</code></pre>\r\n              `,\r\n                    confirmButtonText: 'Lovely!'\r\n                })\r\n            }\r\n            //update activity level:\r\n            upadteActivity(result.value[1]);\r\n            if (Number(result.value[1]) === 100) {\r\n                //say Goog Jub:\r\n                goodJob();\r\n            }\r\n        })\r\n    }\r\n\r\n    const planClick = async () => {\r\n        const inputAttributes = new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve({\r\n                    min: 1,\r\n                    max: 100,\r\n                    step: 1\r\n                })\r\n            }, 1000)\r\n        })\r\n\r\n        const { value: color } = await Swal.fire({\r\n            title: `${myPets[petIndex].name} Plan day level `,\r\n            icon: 'question',\r\n            input: 'range',\r\n            inputLabel: 'Your Choice',\r\n            inputAttributes: inputAttributes,\r\n            inputValue: plan,\r\n            inputValidator: (value) => {\r\n                if (!value) {\r\n                    return 'You need to choose something!'\r\n                }\r\n            }\r\n        })\r\n        if (color) {\r\n            Swal.fire({ html: `You selected: ${color}` });\r\n            upadtePlan(Number(color));\r\n            if (Number(color) === 100) {\r\n                //say Goog Jub:\r\n                goodJob();\r\n            }\r\n        }\r\n    }\r\n\r\n    const activityClick = async () => {\r\n        const inputAttributes = new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve({\r\n                    min: 1,\r\n                    max: 100,\r\n                    step: 1\r\n                })\r\n            }, 1000)\r\n        })\r\n\r\n        const { value: color } = await Swal.fire({\r\n            title: `${myPets[petIndex].name} Energy level `,\r\n            icon: 'question',\r\n            input: 'range',\r\n            inputLabel: 'Your Choice',\r\n            inputAttributes: inputAttributes,\r\n            inputValue: activity,\r\n            inputValidator: (value) => {\r\n                if (!value) {\r\n                    return 'You need to choose something!'\r\n                }\r\n            }\r\n        })\r\n        if (color) {\r\n            Swal.fire({ html: `You selected: ${color}` });\r\n            upadteActivity(Number(color));\r\n            if (Number(color) === 100) {\r\n                //say Goog Jub:\r\n                goodJob();\r\n            }\r\n        }\r\n    }\r\n\r\n    const foodClick = async () => {\r\n        const inputAttributes = new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve({\r\n                    min: 1,\r\n                    max: 100,\r\n                    step: 1\r\n                })\r\n            }, 1000)\r\n        })\r\n\r\n        const { value: color } = await Swal.fire({\r\n            title: `${myPets[petIndex].name} Food level `,\r\n            icon: 'question',\r\n            input: 'range',\r\n            inputLabel: 'Your Choice',\r\n            inputAttributes: inputAttributes,\r\n            inputValue: food,\r\n            inputValidator: (value) => {\r\n                if (!value) {\r\n                    return 'You need to choose something!'\r\n                }\r\n            }\r\n        })\r\n        if (color) {\r\n            Swal.fire({ html: `You selected: ${color}` });\r\n            upadteFood(Number(color));\r\n            if (Number(color) === 100) {\r\n                //say Goog Jub:\r\n                goodJob();\r\n            }\r\n        }\r\n    }\r\n\r\n    const showMyPets = () => {\r\n        console.log(myPets)\r\n        if (myPets.length === 0) {\r\n            return ('no Pats');\r\n        }\r\n        //set defult elements from db\r\n        let age = (myPets[petIndex].age === undefined) ? \"Forever Young\" : myPets[petIndex].age;\r\n        myPets[petIndex].complitDayPlan = myPets[petIndex].currDayPlanLevel == 0 ? myPets[petIndex].currDayPlanLevel : Math.ceil(myPets[petIndex].currDayPlanLevel / (100 / myPets[petIndex].dayPlanLevel));\r\n        myPets[petIndex].complitActivity = myPets[petIndex].currActivityLevel === 0 ? myPets[petIndex].currActivityLevel : Math.ceil(myPets[petIndex].currActivityLevel / (100 / myPets[petIndex].activityLevel));\r\n        myPets[petIndex].complitFood = myPets[petIndex].currFoodLevel === 0 ? myPets[petIndex].currFoodLevel : Math.ceil(myPets[petIndex].currFoodLevel / (100 / myPets[petIndex].foodLevel));\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row p-3 justify-content-between btn_section\" >\r\n                    <ArrowBackIosRoundedIcon onClick={handleClick} className=\"align-self-center\" style={{ fontSize: '200%', color: '#6EA8FF',cursor: 'pointer' }}></ArrowBackIosRoundedIcon>\r\n                    <div className=\"col d-flex justify-content-center align-items-center\">\r\n                        <img src={myPets[petIndex].img}  \r\n                            alt=\"Avatar\" className=\"img_pet rounded-circle\" style={{ width: '35%', border: '#fff solid', padding: '2%' }} />\r\n                        <div className=\"col-6 justify-content-end\">\r\n                            <h5 className=\"pt-4 pl-2\" style={{ color: '#727377' }}> {myPets[petIndex].type}</h5>\r\n                            <h2 className=\"pl-2\">{myPets[petIndex].name}</h2>\r\n                            <h5 className=\"pb-2 pl-2\" style={{ color: '#727377' }}> age {age}</h5>\r\n                        </div>\r\n                        <ArrowForwardIosRoundedIcon onClick={handleClickRight} className=\"align-self-center\" style={{ fontSize: '200%', color: '#6EA8FF',cursor: 'pointer' }}></ArrowForwardIosRoundedIcon>\r\n                    </div>\r\n                </div>\r\n                <h3 className=\"mt-4 pb-2\">State</h3>\r\n                {/* dayly plan section */}\r\n                <div className='row p-3 justify-content-between btn_section mb-3' style={{ boxShadow: 'none' }}>\r\n                    <div className=\"col-8 align-self-center p-2\">\r\n                        <h4><strong>Today's Plans</strong></h4>\r\n                        <h5>{myPets[petIndex].complitDayPlan} tasks completed</h5>\r\n                    </div>\r\n                    <div className='col-4 align-self-center text-center'style={{ cursor: 'pointer' }}>\r\n                        <Chart mydata={plan} onClick={planClick} />\r\n                    </div>\r\n                </div>\r\n                {/*End of dayly plan section */}\r\n\r\n                {/* Energy avaliable section */}\r\n                <div className='row p-3 justify-content-between btn_section mb-3' style={{ boxShadow: 'none' }}>\r\n                    <div className=\"col-8 align-self-center p-2\">\r\n                        <h4><strong>Energy avaliable</strong></h4>\r\n                        <h5>{myPets[petIndex].complitActivity} tasks completed</h5>\r\n                    </div>\r\n                    <div className='col-4 align-self-center text-center' style={{ cursor: 'pointer' }}>\r\n                        <Chart mydata={activity} onClick={activityClick} />\r\n                    </div>\r\n                </div>\r\n                {/*End of Energy avaliable section */}\r\n\r\n                {/* EDaily food habits section */}\r\n                <div className='row p-3 justify-content-between btn_section mb-3' style={{ boxShadow: 'none' }}>\r\n                    <div className=\"col-8 align-self-center p-2\">\r\n                        <h4><strong>Daily food habits</strong></h4>\r\n                        <h5>{myPets[petIndex].complitFood} tasks completed</h5>\r\n                    </div>\r\n                    <div className='col-4 align-self-center text-center' style={{ cursor: 'pointer' }}>\r\n                        <Chart mydata={food} onClick={foodClick}/>\r\n                    </div>\r\n                </div>\r\n                {/*End of Daily food habits section */}\r\n\r\n                <div className='col-auto text-center' style={{ marginBottom: '100px' }}>\r\n                    <button onClick={onClickPlay} className=\"btnStyle btn-lg btns_blue mt-4 w-75\">Start a Play</button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"py-4\">Home</h1>\r\n                    <h3>Dashboard</h3>\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    {data ? showMyPets() : <Loading />}\r\n                </div>\r\n            </main>\r\n            <footer> <Navbar namePage={'myInfo'} /> </footer>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MyInfo\r\n","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\EditPet.js",["129"],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Login.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\MyPets.js",["130"],"import * as React from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from '../RepeatingComponents/Navbar';\r\nimport Loading from '../RepeatingComponents/Loading';\r\nimport { Link } from 'react-router-dom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\nconst MyPets = (props) => {\r\n    const [pets, setPets] = React.useState([]);\r\n    const [data, setData] = React.useState(false); // data retrieved from the server(y\\n)\r\n\r\n\r\n    //getting all the data of a specific user\r\n    React.useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://petwalkapp.herokuapp.com/pets/ofUser',\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then((data) => {\r\n                setPets(data.data);\r\n                setData(true);\r\n\r\n                //if deleted in profile page then set state here.\r\n                if (props.location.state != null) {\r\n                    if (props.location.state.petDeleted) {\r\n                        console.log(props.location.state.petDeleted);\r\n                        deleted(props.location.state.petDeleted);\r\n                    }\r\n                }\r\n\r\n                //if added pet then set state here.\r\n                if (props.location.state != null) {\r\n                    if (props.location.state.petAdded) {\r\n                        console.log(props.location.state.petAdded);\r\n                        added(props.location.state.petAdded);\r\n                    }\r\n                }\r\n                return;\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n                alert('Sorry Something went wring');\r\n                return;\r\n            })\r\n    }, [])\r\n\r\n\r\n    const added = (item) => {\r\n        setPets(prevState => {\r\n            [...pets].push({\r\n                _id: item._id,\r\n                name: item.name,\r\n                type: item.type,\r\n                age: item.age,\r\n                weight: item.weight,\r\n                gender: item.gender,\r\n                activityLevel: item.activityLevel,\r\n                foodLevel: item.foodLevel,\r\n                dayPlanLevel: item.dayPlanLevel,\r\n                dayPlan: item.dayPlan,\r\n                hobbies: item.hobbies\r\n            });\r\n        })\r\n    }\r\n\r\n    const deleted = (deleteId) => {\r\n        setPets(prevState => prevState.filter(({ _id }) => _id !== deleteId));\r\n        //after deleted in page set the props to starting --null\r\n        props.location.state = null;\r\n    }\r\n\r\n\r\n    const showPets = (item) => {\r\n        let age = (item.age === undefined) ? \"Forever Young\" : item.age;\r\n        return (\r\n            <React.Fragment>\r\n                <div key={item._id} className='row p-3 mt-4 justify-content-between btn_section'>\r\n                    <div className=\"col d-flex justify-content-center align-items-center\">\r\n                        <img src={item.img} alt={item.name} className=\"img_pet\" style={{ height: '3cm', border: '#fff solid', borderRadius: '50%', padding: '5%' }} />\r\n                    </div>\r\n                    <div className=\"col justify-content-start\">\r\n                        <h5 className=\"pt-4 ml-2\" style={{ color: '#727377' }}> {item.type}</h5>\r\n                        <h2 className=\"ml-2\"> {item.name}</h2>\r\n                        <h5 className=\"pb-2 ml-2\" style={{ color: '#727377' }}>age : {age}</h5>\r\n                    </div>\r\n                    <div className=\"col-1 align-self-center\">\r\n                        <Link to={{ pathname: \"/petProfile\", state: { pet_id: item._id } }} >\r\n                            <ArrowForwardIosRoundedIcon className=\"align-self-center\" style={{ fontSize: '200%', color: '#6EA8FF' }}></ArrowForwardIosRoundedIcon></Link>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    console.log(props.location.state);\r\n    if (props.location.state != null) {\r\n        console.log(props.location.state.petEdited);\r\n        console.log(props.location.state.petDeleted);\r\n    }\r\n    console.log(pets);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <div className=\"mt-2\">\r\n                        <Link to={{ pathname: \"/myInfo\"}} className=\"py-2\" ><ArrowBackIcon style={{ fontSize: 'xx-large', color: 'black' }}></ArrowBackIcon></Link>\r\n                        <h1 className=\"py-2\">My Pets</h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    {data ? pets.map(showPets) : <Loading />}\r\n                </div>\r\n                <div className=\"col-auto text-center mt-5\"  style={{ marginBottom: '100px' }}>\r\n                    <Link to={{ pathname: '/addPet' }} style={{ borderRadius: '50%' }} className=\" btnStyle btn-lg btns_blue mt-4 w-75\"><AddIcon /></Link>\r\n                </div>\r\n            </main>\r\n            <footer> <Navbar namePage={'myPets'} /> </footer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default MyPets\r\n","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\MyCommunity.js",["131"],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\AddCommunity.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\Community.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Chart.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\RepeatingComponents\\Loading.js",["132","133"],"import * as React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div></div>\r\n            <div className=\"text-center mr-3 w-100\">\r\n                <img src=\"images/loading-dog.gif\" width=\"200\" />\r\n            </div>\r\n            <div></div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Loading","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\RepeatingComponents\\Navbar.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\RepeatingComponents\\SearchClass.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\CommunityList.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\CommunityItem.js",["134"],"import * as React from 'react'\r\nimport FooterCommunity from './FooterCommunity';\r\nimport FooterMyCommunity from './FooterMyCommunity';\r\nimport AOS from 'aos';\r\nimport \"aos/dist/aos.css\";\r\n\r\n\r\nconst CommunityItem = (props) => {\r\n    const { item, title, page, deleteItem, editItem } = props;\r\n\r\n    React.useEffect(() => {\r\n        AOS.init({duration: 2000});\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div key={item._id} data-aos=\"fade-down\" className=\"card col-md-4 col-8 m-3\">\r\n                <div style={{ padding: '.75rem 1.25rem' }}>\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-10 w-100\">\r\n                            <img\r\n                                className=\"rounded-circle d-md-block\"\r\n                                style={{ width: '35%', padding: '5%' }}\r\n                                src={item.user_id.avatar}\r\n                                alt=\"\"\r\n                            />\r\n                            {title}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <img className=\"card-img-top\" src={item.img} alt=\"Card image\" />\r\n                <div className=\"card-body\">\r\n                    <div className=\"row p-2 fafa justify-content-between\">\r\n                        {page === 'community'\r\n                            ? <FooterCommunity />\r\n                            : <FooterMyCommunity editItem={() => { editItem(item._id) }} deleteItem={() => { deleteItem(item._id) }} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CommunityItem","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\FooterMyCommunity.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Community\\FooterCommunity.js",["135"],"import * as React from 'react';\r\nimport '../../../App.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from 'react-router-dom';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\n\r\n\r\nconst FooterCommunity = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"#\" ><StarIcon /></Link>\r\n            <ChatBubbleOutlineIcon className=\"fafaIcons\"/>\r\n            <FacebookIcon className=\"fafaIcons2\"/>\r\n            <TwitterIcon className=\"fafaIcons3\"/>\r\n            <InstagramIcon className=\"fafaIcons4\"/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default FooterCommunity","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Pet404.js",["136","137","138"],"import * as React from 'react'\r\nimport { Button, Input } from '@material-ui/core';\r\nimport '../../App.css';\r\n\r\n\r\nconst Pet404 = (props) => {\r\n    const {dogBreed} = props;\r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"col text-center d-block mb-4\">\r\n                <img src=\"images/404.PNG\" width=\"300\" />\r\n                <h1>Oops, No pet found by type: <strong>{dogBreed}</strong> </h1> \r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Pet404","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Propess.js",["139"],"import * as React from 'react'\r\nimport '../../App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from '../RepeatingComponents/Navbar';\r\n\r\n\r\n\r\n\r\nconst Propess = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"col text-center d-block mb-4\">\r\n                <img src=\"images/404.PNG\" width=\"400\" />\r\n                <h1><strong>SORRY</strong> </h1> \r\n                <h4><strong>In Process....</strong> </h4> \r\n\r\n                <Link to=\"\\myInfo\" ><div className='col-auto text-center' style={{ marginBottom: '100px' }}>\r\n                    <button className=\"btnStyle btn-lg btns_blue mt-4 w-75\">Back to HomePage</button>\r\n                </div>\r\n                </Link>\r\n            </div>\r\n\r\n            <footer> <Navbar namePage={'settings'} /> </footer>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Propess","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\SearchApi\\SearchList.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\SearchApi\\SearchItem.js",["140"],"import * as React from 'react';\r\nimport '../../../App.css';\r\n\r\nconst SearchItem = (props) => {\r\n    const { i } = props;\r\n    console.log(i);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div key={i} className=\"col-lg-3 col-md-4 col-6 d-block mb-4 h-100 gallery\">\r\n                <img className=\"img-fluid img-thumbnail\" style={{ marginTop: '10px', width: 200, height: 200 }} src={i} alt='dog image' />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SearchItem","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\SearchApi\\Search.js",["141","142","143","144","145"],"import axios from 'axios'\r\nimport * as React from 'react'\r\nimport Navbar from '../../RepeatingComponents/Navbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Pet404 from \"../Pet404\";\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { Select } from '@material-ui/core';\r\nimport SearchList from './SearchList';\r\n\r\nlet dogsImagesArray = [];\r\nlet dogsStart = [];\r\nlet key = 0\r\n\r\n\r\nconst Search = () => {\r\n    const [dogBreed, setBreed] = React.useState('');\r\n    const [fullArray, setFullArray] = React.useState(false);\r\n    const [dogs, setDogs] = React.useState([]);\r\n    const [err404, setEror404] = React.useState(false);\r\n    const [type2, setDogType2] = React.useState(false);\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://dog.ceo/api/breeds/image/random/10',\r\n        })\r\n            .then((data) => {\r\n                if (data.data.status === 'success') {\r\n                    dogsStart = data.data.message;\r\n                    setDogs(data.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                return;\r\n            })\r\n\r\n    }, [])\r\n\r\n    // const showImages = (imageLink) => {\r\n    //     return (\r\n    //         <React.Fragment>\r\n    //             <div class=\"col-lg-3 col-md-4 col-6 d-block mb-4 h-100 gallery\">\r\n    //                 <img class=\"img-fluid img-thumbnail\" style={{  marginTop: '10px', width: 200, height: 200 }} key={key++} src={imageLink} alt='dog image' />\r\n    //             </div>\r\n    //         </React.Fragment>\r\n    //     )\r\n    // }\r\n\r\n    const onClick = async () => {\r\n        setEror404(false);\r\n        if (dogBreed !== '') {\r\n            await axios({\r\n                method: \"GET\",\r\n                url: `https://dog.ceo/api/breed/${dogBreed}/images`\r\n            })\r\n                .then((responseJson) => {\r\n                    if (responseJson.data.status === 'success') {\r\n                        dogsImagesArray = responseJson.data.message\r\n                        setFullArray(true)\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.response);\r\n                    if (err.response.status == 404) {\r\n                        setEror404(true);\r\n                        setFullArray(false)\r\n                    }\r\n                })\r\n        }\r\n        //if no value writen the dont do anything \r\n        else return;\r\n    }\r\n\r\n    console.log(dogBreed);\r\n    return (\r\n        <>\r\n            <header className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"py-4\">Pets in the World</h1>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-8\">\r\n                            <form className=\"search-box my-2\">\r\n                                <input type='text' className=\"search-txt\" placeholder=\"Search types\" onChange={(event) => { setBreed(event.currentTarget.value) }} />\r\n                                <SearchIcon onClick={onClick} className=\"search-btn\" />\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-4 align-self-center\">\r\n                            <Select variant=\"outlined\" className=\"w-100\" value={dogBreed} onChange={(event) => { setBreed(event.target.value) }}>\r\n                                <MenuItem selected value='Boxer' onClick={onClick}  >Akita</MenuItem>\r\n                                <MenuItem value='Boxer' onClick={onClick} >Boxer</MenuItem>\r\n                                <MenuItem value='Chow' onClick={onClick} >Chow</MenuItem>\r\n                                <MenuItem value='Dingo' onClick={onClick} >Dingo</MenuItem>\r\n                                <MenuItem value='Husky' onClick={onClick} >Husky</MenuItem>\r\n                                <MenuItem value='Mix' onClick={onClick} >Mix</MenuItem>\r\n                            </Select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <div id=\"id_gallery\" class=\"row text-center text-lg-left\">\r\n                        {\r\n                            err404 ?\r\n                                <Pet404 dogBreed={dogBreed} /> :\r\n                                (!fullArray ?\r\n                                    <SearchList searchList={dogsStart} i={0} />\r\n                                    : \r\n                                    <SearchList searchList={dogsImagesArray} i={0} />\r\n                                )\r\n                        }\r\n\r\n                        {/* {\r\n                            err404 ?\r\n                                <Pet404 dogBreed={dogBreed} /> :\r\n                                (!fullArray ?\r\n                                    <SearchList searchList={dogsStart} i={0} />\r\n                                    //dogsStart.map(showImages)\r\n                                    : //dogsImagesArray.map(showImages)\r\n                                    <SearchList searchList={dogsImagesArray} i={0} />\r\n                                )\r\n                        } */}\r\n                    </div>\r\n                </div>\r\n            </main>\r\n\r\n            <footer> <Navbar namePage={'search'} /> </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n\r\n\r\n\r\n","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Profile\\PetProfile.js",["146","147"],"import * as React from 'react';\r\nimport '../../../App.css';\r\nimport axios from 'axios';\r\nimport PetsIcon from '@material-ui/icons/Pets';\r\nimport WcIcon from '@material-ui/icons/Wc';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from '../../RepeatingComponents/Navbar';\r\nimport Loading from '../../RepeatingComponents/Loading';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport AcordionProfile from './AcordionProfile';\r\n\r\nconst PetProfile = (props) => {\r\n    const [dogId, setDogId] = React.useState(\"\")\r\n    const [dogType, setDogType] = React.useState('')\r\n    const [dogName, setDogName] = React.useState('')\r\n    const [dogGender, setDogGender] = React.useState('Male')\r\n    const [dogAge, setDogAge] = React.useState('')\r\n    const [dogWeight, setDogWeight] = React.useState('')\r\n    const [dogPlan, setDogPlan] = React.useState('')\r\n    const [activityLevel, setActivityLevel] = React.useState(null)\r\n    const [foodLevel, setFoodLevel] = React.useState(null)\r\n    const [dayPlanLevel, setDayPlanLevel] = React.useState(null)\r\n    const [hobbies, setHobbies] = React.useState(\"\")\r\n    const [bio, setBio] = React.useState(\"\")\r\n    const [dogImg, setDogImg] = React.useState(\"\")\r\n    const [data, setData] = React.useState(false); // data retrieved from the server(y\\n)\r\n\r\n\r\n    React.useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `https://petwalkapp.herokuapp.com/pets/ofUser/${props.location.state.pet_id}`,\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then((data) => {\r\n                //including update \r\n                const dogInfo = data.data[0];\r\n                console.log(dogInfo);\r\n                setDogId(props.location.state.pet_id);\r\n                setDogName(dogInfo.name);\r\n                setDogType(dogInfo.type);\r\n                setDogType(dogInfo.type);\r\n                setDogWeight(dogInfo.weight);\r\n                setDogAge(dogInfo.age);\r\n                setDogGender(dogInfo.gender);\r\n                setActivityLevel(dogInfo.activityLevel);\r\n                setFoodLevel(dogInfo.foodLevel);\r\n                setDogPlan(dogInfo.dayPlan);\r\n                setDayPlanLevel(dogInfo.dayPlanLevel);\r\n                setHobbies(dogInfo.hobbies);\r\n                setBio(dogInfo.bio);\r\n                setDogImg(dogInfo.img);\r\n                setData(true);\r\n                if (props.location.state.edited){\r\n                    editPet();\r\n                    return;\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (err)\r\n                    console.log(err)\r\n\r\n            })\r\n    }, [])\r\n\r\n    const deletePet = () => {\r\n        //delete from db:\r\n        axios({\r\n            method: 'DELETE',\r\n            url: `https://petwalkapp.herokuapp.com/pets/${dogId}`,\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"]\r\n            }\r\n        })\r\n            .then(myData => {\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'success',\r\n                    title: 'Deleted Successfuly',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n                //set state in MYPet page:\r\n                //setPets(prevState => prevState.filter(({ _id }) => _id !== dogId));\r\n                //props.location.state.deleted(dogId, true);\r\n                return;\r\n            })\r\n            .catch(err => {\r\n                if (err)\r\n                    console.log(\"problem with dog deletion:\\n\" + err);\r\n                return;\r\n            })\r\n    }\r\n\r\n    const editPet = () => {\r\n        if(props.location.state.name !== undefined) setDogName(props.location.state.name);\r\n        if(props.location.state.type !== undefined) setDogType(props.location.state.type);\r\n        if(props.location.state.age !== undefined) setDogAge(props.location.state.age);\r\n        if(props.location.state.weight !== undefined) setDogWeight(props.location.state.weight);\r\n        if(props.location.state.gender !== undefined) setDogGender(props.location.state.gender);\r\n        if(props.location.state.activityLevel !== undefined) setActivityLevel(props.location.state.activityLevel);\r\n        if(props.location.state.dogPlan !== undefined) setDogPlan(props.location.state.dogPlan);\r\n        if(props.location.state.dayPlanLevel !== undefined) setDayPlanLevel(props.location.state.dayPlanLevel);\r\n        if(props.location.state.hobbies !== undefined) setHobbies(props.location.state.hobbies);\r\n        if(props.location.state.dogPlan !== undefined) setDogPlan(props.location.state.dogPlan);\r\n        if(props.location.state.bio !== undefined) setBio(props.location.state.bio);\r\n        if(props.location.state.dogImg !== undefined) setDogImg(props.location.state.dogImg);\r\n    }\r\n\r\n    const showProfile = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"text-center\">\r\n                    <div className=\"text-center\">\r\n                        <img src={dogImg} alt=\"PetPic\"\r\n                            style={{ maxWidth: '30%', borderRadius: '50%', backgroundColor: 'azure' }} />\r\n                    </div>\r\n                    <h1 className=\"my-2\">{dogName}</h1>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-lg-6\">\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"col\">\r\n                                            <Link to={{ pathname: \"/editPet\", state: { pet_id: dogId } }} ><button className=\"btn btn-warning p-2 mb-2\"><EditIcon style={{ cursor: 'pointer' }} /> Edit</button></Link>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <Link to={{ pathname: \"/myPets\", state: { petDeleted: dogId } }} onClick={deletePet}><button className=\"btn btn-danger p-2 mb-2\"> <DeleteIcon style={{ cursor: 'pointer' }} /> Delete</button></Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h3><PetsIcon /> Type: {dogType}</h3>\r\n                    <div className=\"row justify-content-center\">\r\n                        <WcIcon className=\"col-3\" style={{ fontSize: '150%', color: '#6EA8FF' }} />\r\n                        <p className=\"col-4 text-start\"> Gender: {dogGender}</p>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <HourglassEmptyIcon className=\"col-3\" style={{ fontSize: '150%', color: '#6EA8FF' }} />\r\n                        <p className=\"col-4 text-start\"> Age: {dogAge}</p>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <DirectionsRunIcon className=\"col-3\" style={{ fontSize: '150%', color: '#6EA8FF' }} />\r\n                        <p className=\"col-4 text-start\"> Acrivity Level: {activityLevel}</p>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <FastfoodIcon className=\"col-3\" style={{ fontSize: '150%', color: '#6EA8FF' }} />\r\n                        <p className=\"col-4 text-start\"> Food Level: {foodLevel}</p>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <FavoriteIcon className=\"col-3\" style={{ fontSize: '150%', color: '#6EA8FF' }} />\r\n                        <p className=\"col-4 text-start\"> Day Plan Level: {dayPlanLevel}</p>\r\n                    </div>\r\n\r\n                    <AcordionProfile details={dogPlan} hobis={hobbies} bio={bio} className=\"mb-5\" />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <div className=\"mt-2\">\r\n                        <Link className=\"py-2\" to=\"/myPets\"><ArrowBackIcon style={{ fontSize: 'xx-large', color: 'black' }}></ArrowBackIcon></Link>\r\n                        <h1 className=\"py-2\"> {dogName} Profile</h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    {data ? showProfile() : <Loading />}\r\n                </div>\r\n            </main>\r\n\r\n            <footer> <Navbar namePage={'myPets'} /> </footer>\r\n        </>\r\n\r\n\r\n\r\n        // <Grid >\r\n        //     <div style={{ display: 'block', position: 'relative', width: '100%', height: '100%', backgroundColor: 'lightgray' }} >\r\n        //         <div style={{ display: 'flex', position: 'relative', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }} >\r\n        //             <img alt=\"my-dog\" src={dogImg} style={{ display: 'block', position: 'relative', width: '100px', height: '100px' }} />\r\n        //             <text><b>{dogName}</b></text>\r\n        //         </div>\r\n        //         <div style={{ display: 'flex', position: 'relative', backgroundColor: 'gray' }} >\r\n        //             <div style={{ display: 'flex', position: 'absolute', left: '20%', width: '175px', flexDirection: 'column' }}>\r\n        //                 <div style={{ flexDirection: 'row' }}>\r\n        //                     <NavLink to='/editPet' ><Button style={{ backgroundColor: 'orange', borderRadius: '10px' }}> <CreateIcon /> Edit</Button></NavLink>\r\n        //                     <NavLink to='/myPets' onClick={() => {\r\n        //                         axios({\r\n        //                             method: 'delete',\r\n        //                             url: `https://petwalkapp.herokuapp.com/pets/${dogId}`,\r\n        //                             headers: {\r\n        //                                 \"x-auth-token\": localStorage[\"token\"]\r\n        //                             }\r\n        //                         })\r\n        //                             .then((data) => {\r\n        //                                 console.log(data)\r\n        //                             })\r\n        //                             .catch((err) => {\r\n        //                                 if (err)\r\n        //                                     console.log(\"problem with dog deletion:\\n\" + err)\r\n        //                             })\r\n        //                     }} ><Button style={{ backgroundColor: 'red', borderRadius: '10px' }}> <DeleteIcon /> Delete</Button></NavLink>\r\n        //                 </div>\r\n        //                 <div style={{ display: 'flex', position: 'absolute',top:'1cm', flexDirection: 'column' }}>\r\n        //                     <text className='pet-profile-text'><PetsIcon /> <b>type: {dogType}</b></text>\r\n        //                     <text> <WcIcon style={{ color: 'skyblue' }} /> gender: {dogGender}</text>\r\n        //                     <text> <HourglassEmptyIcon style={{ color: 'skyblue' }} /> age: {dogAge} </text>\r\n        //                     <text> <DirectionsRunIcon style={{ color: 'skyblue' }} /> activity level: {activityLevel} </text>\r\n        //                     <text> <FastfoodIcon style={{ color: 'skyblue' }} /> food level: {foodLevel} </text>\r\n        //                     <text> <FavoriteIcon style={{ color: 'skyblue' }} /> day plan level: {dayPlanLevel} </text>\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div style={{ display: 'flex', position: 'absolute',right: '20%',flexDirection:'column' }} >\r\n        //                 <label>Hobbies:</label>\r\n        //                 <text>{hobbies}</text>\r\n        //                 <label>Bio:</label>\r\n        //                 <text>{bio}</text>\r\n        //                 <label>Day Plan:</label>\r\n        //                 <text>{dogPlan}</text>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        //     <Navbar />\r\n        // </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default PetProfile","C:\\Users\\shani\\Desktop\\reactPro\\11.2\\pet_walk_client\\src\\Components\\MainComponents\\Profile\\AcordionProfile.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":44,"column":8,"nodeType":"154","endLine":44,"endColumn":10,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":358,"column":77,"nodeType":"158","messageId":"159","endLine":358,"endColumn":79},{"ruleId":"152","severity":1,"message":"160","line":63,"column":8,"nodeType":"154","endLine":63,"endColumn":10,"suggestions":"161"},{"ruleId":"152","severity":1,"message":"162","line":51,"column":8,"nodeType":"154","endLine":51,"endColumn":10,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":107,"column":15,"nodeType":"166","messageId":"167","endLine":107,"endColumn":20},{"ruleId":"164","severity":1,"message":"168","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":10,"column":17,"nodeType":"171","endLine":10,"endColumn":65},{"ruleId":"172","severity":1,"message":"173","line":31,"column":17,"nodeType":"171","endLine":31,"endColumn":81},{"ruleId":"164","severity":1,"message":"174","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":18},{"ruleId":"164","severity":1,"message":"175","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":16},{"ruleId":"164","severity":1,"message":"176","line":2,"column":18,"nodeType":"166","messageId":"167","endLine":2,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":11,"column":17,"nodeType":"171","endLine":11,"endColumn":57},{"ruleId":"169","severity":1,"message":"170","line":13,"column":17,"nodeType":"171","endLine":13,"endColumn":57},{"ruleId":"172","severity":1,"message":"173","line":11,"column":17,"nodeType":"171","endLine":11,"endColumn":135},{"ruleId":"164","severity":1,"message":"177","line":12,"column":5,"nodeType":"166","messageId":"167","endLine":12,"endColumn":8},{"ruleId":"164","severity":1,"message":"178","line":18,"column":12,"nodeType":"166","messageId":"167","endLine":18,"endColumn":16},{"ruleId":"164","severity":1,"message":"179","line":20,"column":12,"nodeType":"166","messageId":"167","endLine":20,"endColumn":17},{"ruleId":"164","severity":1,"message":"180","line":20,"column":19,"nodeType":"166","messageId":"167","endLine":20,"endColumn":30},{"ruleId":"156","severity":1,"message":"157","line":67,"column":45,"nodeType":"158","messageId":"159","endLine":67,"endColumn":47},{"ruleId":"164","severity":1,"message":"181","line":27,"column":12,"nodeType":"166","messageId":"167","endLine":27,"endColumn":21},{"ruleId":"152","severity":1,"message":"182","line":75,"column":8,"nodeType":"154","endLine":75,"endColumn":10,"suggestions":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'data' and 'petIndex'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setActiviry' needs the current value of 'petIndex'.","ArrayExpression",["186"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has a missing dependency: 'props.location.state.pet_id'. Either include it or remove the dependency array.",["187"],"React Hook React.useEffect has missing dependencies: 'added', 'deleted', and 'props.location.state'. Either include them or remove the dependency array.",["188"],"no-unused-vars","'onIMG' is assigned a value but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'SearchIcon' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'key' is assigned a value but never used.","'dogs' is assigned a value but never used.","'type2' is assigned a value but never used.","'setDogType2' is assigned a value but never used.","'dogWeight' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'editPet', 'props.location.state.edited', and 'props.location.state.pet_id'. Either include them or remove the dependency array. If 'setDogId' needs the current value of 'props.location.state.pet_id', you can also switch to useReducer instead of useState and read 'props.location.state.pet_id' in the reducer.",["189"],"no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [data, petIndex]",{"range":"198","text":"199"},"Update the dependencies array to be: [props.location.state.pet_id]",{"range":"200","text":"201"},"Update the dependencies array to be: [added, deleted, props.location.state]",{"range":"202","text":"203"},"Update the dependencies array to be: [editPet, props.location.state.edited, props.location.state.pet_id]",{"range":"204","text":"205"},[1678,1680],"[data, petIndex]",[2331,2333],"[props.location.state.pet_id]",[1891,1893],"[added, deleted, props.location.state]",[3083,3085],"[editPet, props.location.state.edited, props.location.state.pet_id]"]
