[{"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\index.js":"1","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\reportWebVitals.js":"2","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\App.js":"3","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\ReactRouter.js":"4","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Search.js":"5","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\AddPet.js":"6","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\MyInfo.js":"7","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\MyPets.js":"8","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Intro.js":"9","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Login.js":"10","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\PetProfile.js":"11","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\EditPet.js":"12","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\RepeatingComponents\\Navbar.js":"13","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\RepeatingComponents\\Loading.js":"14","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Chart.js":"15","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\RepeatingComponents\\SearchClass.js":"16","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\CommunityItem.js":"17","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\Community.js":"18","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\MyCommunity.js":"19","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\CommunityList.js":"20","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\FooterCommunity.js":"21","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\FooterMyCommunity.js":"22","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\AddCommunity.js":"23","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\test.js":"24","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\AcordionProfile.js":"25"},{"size":517,"mtime":1611651592527,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1611651592529,"results":"28","hashOfConfig":"27"},{"size":329,"mtime":1611651592516,"results":"29","hashOfConfig":"27"},{"size":1475,"mtime":1611938661569,"results":"30","hashOfConfig":"27"},{"size":1644,"mtime":1611651592523,"results":"31","hashOfConfig":"27"},{"size":7128,"mtime":1611942379955,"results":"32","hashOfConfig":"27"},{"size":16902,"mtime":1611929688174,"results":"33","hashOfConfig":"27"},{"size":9113,"mtime":1611943496766,"results":"34","hashOfConfig":"27"},{"size":940,"mtime":1611651592519,"results":"35","hashOfConfig":"27"},{"size":5484,"mtime":1611777248388,"results":"36","hashOfConfig":"27"},{"size":12940,"mtime":1611950218329,"results":"37","hashOfConfig":"27"},{"size":9488,"mtime":1611948787310,"results":"38","hashOfConfig":"27"},{"size":1578,"mtime":1611698021410,"results":"39","hashOfConfig":"27"},{"size":397,"mtime":1611651592523,"results":"40","hashOfConfig":"27"},{"size":763,"mtime":1611929860200,"results":"41","hashOfConfig":"27"},{"size":689,"mtime":1611735873332,"results":"42","hashOfConfig":"27"},{"size":1392,"mtime":1611923101217,"results":"43","hashOfConfig":"27"},{"size":2494,"mtime":1611923362628,"results":"44","hashOfConfig":"27"},{"size":5856,"mtime":1611924856642,"results":"45","hashOfConfig":"27"},{"size":521,"mtime":1611872909730,"results":"46","hashOfConfig":"27"},{"size":774,"mtime":1611741268373,"results":"47","hashOfConfig":"27"},{"size":511,"mtime":1611923078204,"results":"48","hashOfConfig":"27"},{"size":3666,"mtime":1611748744869,"results":"49","hashOfConfig":"27"},{"size":676,"mtime":1611748068165,"results":"50","hashOfConfig":"27"},{"size":2759,"mtime":1611880436543,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"fxvryk",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\index.js",[],["115","116"],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\reportWebVitals.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\App.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\ReactRouter.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Search.js",["117","118"],"import axios from 'axios'\r\nimport * as React from 'react'\r\nimport Navbar from '../RepeatingComponents/Navbar'\r\nimport { Button, Input } from '@material-ui/core';\r\n\r\nlet dogsImagesArray = []\r\nlet key=0\r\n\r\nconst showImages = (imageLink) => {\r\n        return (\r\n            <img style={{float:'left',marginTop:'10px',marginLeft:'20px',marginRight:'20px',width: 100, height: 100 }} key={key++} src={imageLink} alt='dog image' />\r\n        )\r\n    \r\n    \r\n}\r\n\r\n\r\nconst Search = () => {\r\n\r\n    const [dogBreed, setBreed] = React.useState('')\r\n    const [fullArray,setFullArray]=React.useState(false)\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Input type='text' placeholder=\"dog breed...\" onChange={(event) => { setBreed(event.currentTarget.value) }} />\r\n            <Button onClick={async () => {\r\n\r\n                await axios({\r\n                    method: \"GET\",\r\n                    url: `https://dog.ceo/api/breed/${dogBreed}/images`\r\n\r\n                    })\r\n                    .then((responseJson) => {\r\n                        if (responseJson.data.status === 'success') {\r\n                            dogsImagesArray = responseJson.data.message\r\n                            setFullArray(true)\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        if (err)\r\n                            console.log('error is:\\n' + err)\r\n                    })\r\n\r\n            }}>SEARCH</Button>\r\n            <div>\r\n            {\r\n                dogsImagesArray.map(showImages)\r\n            }\r\n            </div>\r\n            <Navbar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n\r\n\r\n\r\n","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\AddPet.js",["119","120","121","122"],"import * as React from 'react'\r\nimport Navbar from '../RepeatingComponents/Navbar'\r\nimport { Button, Grid, Input, MenuItem, TextField } from '@material-ui/core';\r\n//import { Label } from '@material-ui/icons';\r\nimport '../../App.css'\r\nimport { Select } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport {Link,NavLink } from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\n\r\nconst AddPet = (props) => {\r\n    const [dogType, setDogType] = React.useState('none')\r\n    const [dogName, setDogName] = React.useState('')\r\n    const [dogGender, setDogGender] = React.useState('Male')\r\n    const [dogAge, setDogAge] = React.useState()//was empty now starting with 1\r\n    const [dogWeight, setDogWeight] = React.useState()//was empty now starting with 1\r\n    const [dogPlan, setDogPlan] = React.useState('')\r\n    const [activityLevel, setActivityLevel] = React.useState()//was number switched to string\r\n    const [foodLevel, setFoodLevel] = React.useState()//was number switched to string\r\n    const [dayPlanLevel, setDayPlanLevel] = React.useState()//was number switched to string\r\n    const [hobbies, setHobbies] = React.useState(\"\")\r\n    const [bio, setBio] = React.useState(\"\")\r\n    const [dogImg, setDogImg] = React.useState(\"https://icon-library.com/images/dog-icon/dog-icon-16.jpg\")\r\n\r\n    const addPet = () => {\r\n        console.log(\"add\");\r\n\r\n    }\r\n\r\n    return (\r\n        // <>\r\n        //   <header className=\"container-fluid\">\r\n        //         <div className=\"container\">\r\n        //             <div className=\"mt-2\">\r\n        //                 <Link to=\"/myInfo\" className=\"py-2\" ><ArrowBackIcon style={{ fontSize: 'xx-large', color: 'black' }}></ArrowBackIcon></Link>\r\n        //                 <h1 className=\"py-2\">My Pets</h1>\r\n        //             </div>\r\n        //         </div>\r\n        //     </header>\r\n        // </>\r\n\r\n\r\n        <Grid style={{backgroundColor:'lightgray'}}>\r\n            <div id='add-pet-container' /*className='general-container'*/>\r\n                <img alt='dog image' src={dogImg} style={{ display: 'block', width: '100px', height: '100px' }} />\r\n                <Input className='add-pet-input' required={true} type='file' onChange={(event) => { setDogImg(event.target.value) }} />\r\n                <TextField className='add-pet-input' type='text' value={dogName} label='Pet Name...' onChange={(event) => { setDogName(event.target.value) }} />\r\n                <Select className='add-pet-input' value={dogType} onChange={(event) => { setDogType(event.target.value) }}>\r\n                    <MenuItem selected value='none' >dog type</MenuItem>\r\n                    <MenuItem value='German Shephard' >German Shephard</MenuItem>\r\n                    <MenuItem value='Bulldog' >Bulldog</MenuItem>\r\n                    <MenuItem value='Golden Retriever' >Golden Retriever</MenuItem>\r\n                    <MenuItem value='Wienner' >Wienner</MenuItem>\r\n                    <MenuItem value='Shitzu' >Shitzu</MenuItem>\r\n                    <MenuItem value='st. bernard' >St. Bernard</MenuItem>\r\n                </Select>\r\n                <Select className='add-pet-input' value={dogGender} onChange={(event) => { setDogGender(event.target.value) }}>\r\n                    <MenuItem selected value='Male' >Male</MenuItem>\r\n                    <MenuItem value='Female' >Female</MenuItem>\r\n                </Select>\r\n                <div className='add-pet-input' style={{ flexDirection: 'row' }} >\r\n                    <TextField label='age...' className='add-pet-input-side-by-side' type='number'  value={dogAge} onChange={(event) => { setDogAge(event.target.value) }} />\r\n                    <TextField label='weight' className='add-pet-input-side-by-side' type='number' placeholder='KGs' value={dogWeight} onChange={(event) => { setDogWeight(event.target.value) }} />\r\n                </div>\r\n                <TextField multiline={true} rows={2} id=\"plan-textfield\" className='add-pet-input' type='text' value={dogPlan} label='daily plan...' onChange={(event) => { setDogPlan(event.target.value) }} />\r\n                <div className='add-pet-input' style={{ flexDirection: 'row' }} >\r\n                    <TextField label='Day Plan Level...' className='add-pet-input-side-by-side-2' type='number' value={dayPlanLevel} onChange={(event) => { setDayPlanLevel(event.target.value) }} />\r\n                    <TextField label='Food Level...' className='add-pet-input-side-by-side-2' type='number' value={foodLevel} onChange={(event) => { setFoodLevel(event.target.value) }} />\r\n                    <TextField label='Activity Level' className='add-pet-input-side-by-side-2' type='number' value={activityLevel} onChange={(event) => { setActivityLevel(event.target.value) }} />\r\n                </div>\r\n                <TextField multiline={true} rows={2} id=\"plan-textfield\" className='add-pet-input' type='text' value={hobbies}  label='Hobbies...' onChange={(event) => { setHobbies(event.target.value) }} />\r\n                <TextField multiline={true} rows={2} id=\"plan-textfield\" className='add-pet-input' type='text' value={bio} label='Bio...' onChange={(event) => { setBio(event.target.value) }} />\r\n                <NavLink to=\"/myPets\" ><Button style={{marginTop:'0.5cm',marginBottom:'1.5cm' ,backgroundColor: 'blue', borderRadius: '100px' }} onClick={() => {\r\n\r\n                    const age = (Number)(dogAge)\r\n                    const weight = (Number)(dogWeight)\r\n                    const activityLevelAsNum = (Number)(activityLevel)\r\n                    const foodLevelAsNum = (Number)(foodLevel)\r\n                    const dayPlanLvlAsNum = (Number)(dayPlanLevel)\r\n\r\n                    const dogData = {\r\n                        \"name\": dogName,\r\n                        \"type\": dogType,\r\n                        \"age\": age,\r\n                        \"weight\": weight,\r\n                        \"gender\": dogGender,\r\n                        \"activityLevel\": activityLevelAsNum,\r\n                        \"foodLevel\": foodLevelAsNum,\r\n                        \"dayPlan\": dogPlan,\r\n                        \"dayPlanLevel\": dayPlanLvlAsNum,\r\n                        \"hobbies\": hobbies,\r\n                        \"bio\": bio,\r\n                        \"img\": dogImg\r\n                    }\r\n                    axios({\r\n                        method: 'post',\r\n                        url: 'https://petwalkapp.herokuapp.com/pets',\r\n                        headers: {\r\n                            \"x-auth-token\": localStorage[\"token\"]\r\n                        },\r\n                        data: dogData\r\n                    })\r\n                        .then((data) => {\r\n                            console.log(data.data[0])\r\n                        })\r\n                        .catch((err) => {\r\n                            if (err)\r\n                                console.log('problem with adding a dog:\\n' + err)\r\n                            console.log(dogData)\r\n\r\n\r\n                        })\r\n                }}>Add Pet</Button></NavLink>\r\n                <Navbar />\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AddPet","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\MyInfo.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { Button } from '@material-ui/core';\r\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\r\nimport ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded';\r\nimport Navbar from '../RepeatingComponents/Navbar';\r\nimport Loading from '../RepeatingComponents/Loading';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport Swal from 'sweetalert2';\r\nimport Chart from './Chart';\r\n\r\n\r\n\r\nconst MyInfo = () => {\r\n    const [myPets, setMyPets] = React.useState([]);\r\n    const [data, setData] = React.useState(false); // data retrieved from the server(y\\n)\r\n    const [petIndex, setPetIndex] = React.useState(0); // index from myPets array \r\n    //elements thet can be updete in this page :\r\n    const [activity, setActiviry] = React.useState(0);\r\n    const [plan, setPlan] = React.useState(0);\r\n    const [food, setFood] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        console.log(data);\r\n        //ok user then do server call:\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://petwalkapp.herokuapp.com/pets/ofUser',\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then((data) => {\r\n                console.log(data.data);\r\n                setMyPets(data.data);\r\n                setActiviry(data.data[petIndex].currActivityLevel);\r\n                setPlan(data.data[petIndex].currDayPlanLevel);\r\n                setFood(data.data[petIndex].currFoodLevel);\r\n                setData(true);\r\n                return;\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                return;\r\n            })\r\n\r\n    }, [])\r\n\r\n    //Click and render the pet in the array :\r\n    const handleClick = () => {\r\n        if (petIndex == 0) {\r\n            setPetIndex(myPets.length - 1);\r\n            setActiviry(myPets[myPets.length - 1].currDayPlanLevel);\r\n            setPlan(myPets[myPets.length - 1].currDayPlanLevel);\r\n            setFood(myPets[myPets.length - 1].currFoodLevel);\r\n        }\r\n        if (petIndex > 0) {\r\n            setPetIndex(petIndex - 1);\r\n            setActiviry(myPets[petIndex - 1].currDayPlanLevel);\r\n            setPlan(myPets[petIndex - 1].currDayPlanLevel);\r\n            setFood(myPets[petIndex - 1].currFoodLevel);\r\n        }\r\n    }\r\n\r\n    const handleClickRight = () => {\r\n        if (petIndex == myPets.length - 1) {\r\n            setPetIndex(0);\r\n            setActiviry(myPets[myPets.length - 1].currDayPlanLevel);\r\n            setPlan(myPets[myPets.length - 1].currDayPlanLevel);\r\n            setFood(myPets[myPets.length - 1].currFoodLevel);\r\n        }\r\n        if (petIndex >= 0 && petIndex < myPets.length - 1) {\r\n            setPetIndex(petIndex + 1);\r\n            setActiviry(myPets[petIndex + 1].currDayPlanLevel);\r\n            setPlan(myPets[petIndex + 1].currDayPlanLevel);\r\n            setFood(myPets[petIndex + 1].currFoodLevel);\r\n        }\r\n    }\r\n\r\n    const upadteActivity = async (level) => {\r\n        //update in db :\r\n        let dataBodyVal = {\r\n            id: myPets[petIndex]._id, //requird for edting in server \r\n            name: myPets[petIndex].name,\r\n            type: myPets[petIndex].type,\r\n            dayPlan: myPets[petIndex].dayPlan,\r\n            dayPlanLevel: myPets[petIndex].dayPlanLevel,\r\n            activityLevel: myPets[petIndex].activityLevel,\r\n            foodLevel: myPets[petIndex].foodLevel,\r\n            currActivityLevel: Number(level)\r\n        }\r\n\r\n        //update\r\n        await axios({\r\n            method: 'PUT',\r\n            url: \"https://petwalkapp.herokuapp.com/pets\",\r\n            data: dataBodyVal,\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then(myData => {\r\n                setActiviry(dataBodyVal.currActivityLevel);\r\n                return;\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                if (error.response.status == 404) {\r\n                    alert(error.response);\r\n                }\r\n                if (error.response.status == 500) {\r\n                    alert(\"Server Error , Try later\");\r\n                }\r\n                return;\r\n            })\r\n    }\r\n\r\n    const upadtePlan = async (level) => {\r\n        //update in db :\r\n        let dataBodyVal = {\r\n            id: myPets[petIndex]._id, //requird for edting in server \r\n            name: myPets[petIndex].name,\r\n            type: myPets[petIndex].type,\r\n            dayPlan: myPets[petIndex].dayPlan,\r\n            dayPlanLevel: myPets[petIndex].dayPlanLevel,\r\n            activityLevel: myPets[petIndex].activityLevel,\r\n            foodLevel: myPets[petIndex].foodLevel,\r\n            currDayPlanLevel: Number(level)\r\n        }\r\n\r\n        //update\r\n        await axios({\r\n            method: 'PUT',\r\n            url: \"https://petwalkapp.herokuapp.com/pets\",\r\n            data: dataBodyVal,\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then(myData => {\r\n                setPlan(dataBodyVal.currDayPlanLevel);\r\n                return;\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                if (error.response.status == 404) {\r\n                    alert(error.response);\r\n                }\r\n                if (error.response.status == 500) {\r\n                    alert(\"Server Error , Try later\");\r\n                }\r\n                return;\r\n            })\r\n    }\r\n\r\n    const goodJob = () => {\r\n        //say Goog Jub:\r\n        Swal.fire({\r\n            title: 'Goog Jub',\r\n            width: 600,\r\n            padding: '3em',\r\n            background: '#fff url(/images/good-job.jpg) ',\r\n            backdrop: `\r\n                      rgba(0,0,123,0.4)\r\n                      url(\"/images/good.gif\")`\r\n        })\r\n\r\n    }\r\n\r\n    const upadteFood = async (level) => {\r\n        //update in db :\r\n        let dataBodyVal = {\r\n            id: myPets[petIndex]._id, //requird for edting in server \r\n            name: myPets[petIndex].name,\r\n            type: myPets[petIndex].type,\r\n            dayPlan: myPets[petIndex].dayPlan,\r\n            dayPlanLevel: myPets[petIndex].dayPlanLevel,\r\n            activityLevel: myPets[petIndex].activityLevel,\r\n            foodLevel: myPets[petIndex].foodLevel,\r\n            currFoodLevel: Number(level)\r\n        }\r\n\r\n        //update\r\n        await axios({\r\n            method: 'PUT',\r\n            url: \"https://petwalkapp.herokuapp.com/pets\",\r\n            data: dataBodyVal,\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then(myData => {\r\n                setFood(dataBodyVal.currFoodLevel);\r\n                return;\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                if (error.response.status == 404) {\r\n                    alert(error.response);\r\n                }\r\n                if (error.response.status == 500) {\r\n                    alert(\"Server Error , Try later\");\r\n                }\r\n                return;\r\n            })\r\n    }\r\n\r\n    const onClickPlay = async () => {\r\n        Swal.mixin({\r\n            input: 'text',\r\n            confirmButtonText: 'Next &rarr;',\r\n            showCancelButton: true,\r\n            progressSteps: ['1', '2', '3']\r\n        }).queue([\r\n            {\r\n                title: 'Where we play?',\r\n                text: 'Garden, park, house, with friends'\r\n            },\r\n            'Playing time',\r\n            'Energy level'\r\n        ]).then((result) => {\r\n            if (Number(result.value[1]) > 100 || Number(result.value[1]) < 0) {\r\n                Swal.fire({\r\n                    title: 'Energy level Must be Number Between 1-100',\r\n                    confirmButtonText: 'Try Agin'\r\n                })\r\n                return;\r\n            }\r\n            if (result.value) {\r\n                const answers = JSON.stringify(result.value)\r\n                Swal.fire({\r\n                    title: 'All done!',\r\n                    html: `\r\n                Your Day Play:\r\n                <pre><code>${answers}</code></pre>\r\n              `,\r\n                    confirmButtonText: 'Lovely!'\r\n                })\r\n            }\r\n            //update activity level:\r\n            upadteActivity(result.value[1]);\r\n            if (Number(result.value[1]) == 100) {\r\n                //say Goog Jub:\r\n                goodJob();\r\n            }\r\n        })\r\n    }\r\n\r\n    const planClick = async () => {\r\n        const inputAttributes = new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve({\r\n                    min: 1,\r\n                    max: 100,\r\n                    step: 1\r\n                })\r\n            }, 1000)\r\n        })\r\n\r\n        const { value: color } = await Swal.fire({\r\n            title: `${myPets[petIndex].name} Plan day level `,\r\n            icon: 'question',\r\n            input: 'range',\r\n            inputLabel: 'Your Choice',\r\n            inputAttributes: inputAttributes,\r\n            inputValue: plan,\r\n            inputValidator: (value) => {\r\n                if (!value) {\r\n                    return 'You need to choose something!'\r\n                }\r\n            }\r\n        })\r\n        if (color) {\r\n            Swal.fire({ html: `You selected: ${color}` });\r\n            upadtePlan(Number(color));\r\n            if (Number(color) == 100) {\r\n                //say Goog Jub:\r\n                goodJob();\r\n            }\r\n        }\r\n    }\r\n\r\n    const activityClick = async () => {\r\n        const inputAttributes = new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve({\r\n                    min: 1,\r\n                    max: 100,\r\n                    step: 1\r\n                })\r\n            }, 1000)\r\n        })\r\n\r\n        const { value: color } = await Swal.fire({\r\n            title: `${myPets[petIndex].name} Energy level `,\r\n            icon: 'question',\r\n            input: 'range',\r\n            inputLabel: 'Your Choice',\r\n            inputAttributes: inputAttributes,\r\n            inputValue: activity,\r\n            inputValidator: (value) => {\r\n                if (!value) {\r\n                    return 'You need to choose something!'\r\n                }\r\n            }\r\n        })\r\n        if (color) {\r\n            Swal.fire({ html: `You selected: ${color}` });\r\n            upadteActivity(Number(color));\r\n            if (Number(color) == 100) {\r\n                //say Goog Jub:\r\n                goodJob();\r\n            }\r\n        }\r\n    }\r\n\r\n    const foodClick = async () => {\r\n        const inputAttributes = new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve({\r\n                    min: 1,\r\n                    max: 100,\r\n                    step: 1\r\n                })\r\n            }, 1000)\r\n        })\r\n\r\n        const { value: color } = await Swal.fire({\r\n            title: `${myPets[petIndex].name} Food level `,\r\n            icon: 'question',\r\n            input: 'range',\r\n            inputLabel: 'Your Choice',\r\n            inputAttributes: inputAttributes,\r\n            inputValue: food,\r\n            inputValidator: (value) => {\r\n                if (!value) {\r\n                    return 'You need to choose something!'\r\n                }\r\n            }\r\n        })\r\n        if (color) {\r\n            Swal.fire({ html: `You selected: ${color}` });\r\n            upadteFood(Number(color));\r\n            if (Number(color) == 100) {\r\n                //say Goog Jub:\r\n                goodJob();\r\n            }\r\n        }\r\n    }\r\n\r\n    const showMyPets = () => {\r\n        console.log(myPets)\r\n        if (myPets.length == 0) {\r\n            return ('no Pats');\r\n        }\r\n        //set defult elements from db\r\n        let age = (myPets[petIndex].age == undefined) ? \"Forever Young\" : myPets[petIndex].age;\r\n        myPets[petIndex].complitDayPlan = myPets[petIndex].currDayPlanLevel == 0 ? myPets[petIndex].currDayPlanLevel : Math.ceil(myPets[petIndex].currDayPlanLevel / (100 / myPets[petIndex].dayPlanLevel));\r\n        myPets[petIndex].complitActivity = myPets[petIndex].currActivityLevel == 0 ? myPets[petIndex].currActivityLevel : Math.ceil(myPets[petIndex].currActivityLevel / (100 / myPets[petIndex].activityLevel));\r\n        myPets[petIndex].complitFood = myPets[petIndex].currFoodLevel == 0 ? myPets[petIndex].currFoodLevel : Math.ceil(myPets[petIndex].currFoodLevel / (100 / myPets[petIndex].foodLevel));\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row p-3 justify-content-between btn_section\" >\r\n                    <ArrowBackIosRoundedIcon onClick={handleClick} className=\"align-self-center\" style={{ fontSize: '200%', color: '#6EA8FF',cursor: 'pointer' }}></ArrowBackIosRoundedIcon>\r\n                    <div className=\"col d-flex justify-content-center align-items-center\">\r\n                        <img src={myPets[petIndex].img}\r\n                            alt=\"Avatar\" className=\"img_pet\" style={{ width: '50%', border: '#fff solid', borderRadius: '50%', padding: '5%' }} />\r\n                        <div className=\"col-6 justify-content-end\">\r\n                            <h5 className=\"pt-4 pl-2\" style={{ color: '#727377' }}> {myPets[petIndex].type}</h5>\r\n                            <h2 className=\"pl-2\">{myPets[petIndex].name}</h2>\r\n                            <h5 className=\"pb-2 pl-2\" style={{ color: '#727377' }}> age {age}</h5>\r\n                        </div>\r\n                        <ArrowForwardIosRoundedIcon onClick={handleClickRight} className=\"align-self-center\" style={{ fontSize: '200%', color: '#6EA8FF',cursor: 'pointer' }}></ArrowForwardIosRoundedIcon>\r\n                    </div>\r\n                </div>\r\n                <h3 className=\"mt-4 pb-2\">State</h3>\r\n                {/* dayly plan section */}\r\n                <div className='row p-3 justify-content-between btn_section mb-3' style={{ boxShadow: 'none' }}>\r\n                    <div className=\"col-8 align-self-center p-2\">\r\n                        <h4><strong>Today's Plans</strong></h4>\r\n                        <h5>{myPets[petIndex].complitDayPlan} tasks completed</h5>\r\n                    </div>\r\n                    <div className='col-4 align-self-center text-center'style={{ cursor: 'pointer' }}>\r\n                        <Chart mydata={plan} onClick={planClick} />\r\n                    </div>\r\n                </div>\r\n                {/*End of dayly plan section */}\r\n\r\n                {/* Energy avaliable section */}\r\n                <div className='row p-3 justify-content-between btn_section mb-3' style={{ boxShadow: 'none' }}>\r\n                    <div className=\"col-8 align-self-center p-2\">\r\n                        <h4><strong>Energy avaliable</strong></h4>\r\n                        <h5>{myPets[petIndex].complitActivity} tasks completed</h5>\r\n                    </div>\r\n                    <div className='col-4 align-self-center text-center' style={{ cursor: 'pointer' }}>\r\n                        <Chart mydata={activity} onClick={activityClick} />\r\n                    </div>\r\n                </div>\r\n                {/*End of Energy avaliable section */}\r\n\r\n                {/* EDaily food habits section */}\r\n                <div className='row p-3 justify-content-between btn_section mb-3' style={{ boxShadow: 'none' }}>\r\n                    <div className=\"col-8 align-self-center p-2\">\r\n                        <h4><strong>Daily food habits</strong></h4>\r\n                        <h5>{myPets[petIndex].complitFood} tasks completed</h5>\r\n                    </div>\r\n                    <div className='col-4 align-self-center text-center' style={{ cursor: 'pointer' }}>\r\n                        <Chart mydata={food} onClick={foodClick}/>\r\n                    </div>\r\n                </div>\r\n                {/*End of Daily food habits section */}\r\n\r\n                <div className='col-auto text-center' style={{ marginBottom: '100px' }}>\r\n                    <button onClick={onClickPlay} className=\"btnStyle btn-lg btns_blue mt-4 w-75\">Start a Play</button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"py-4\">Home</h1>\r\n                    <h3>Dashboard</h3>\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    {data ? showMyPets() : <Loading />}\r\n                </div>\r\n            </main>\r\n            <footer> <Navbar namePage={'myInfo'} /> </footer>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MyInfo\r\n","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\MyPets.js",["143","144","145","146","147","148","149","150","151","152"],"import * as React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Navbar from '../RepeatingComponents/Navbar';\r\nimport Loading from '../RepeatingComponents/Loading';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport MediaQuery from 'react-responsive'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport PetProfile from './PetProfile';\r\n\r\n\r\n\r\n\r\n// const showPets = (item) => {\r\n//     let age = (item.age === undefined) ? \"Forever Young\" : item.age;\r\n\r\n//     return (\r\n//         <React.Fragment>\r\n//             <div key={item._id} className='row p-3 mt-4 justify-content-between btn_section'>\r\n//                 <div className=\"col d-flex justify-content-center align-items-center\">\r\n//                     <img src={item.img} alt={item.name} className=\"img_pet\" style={{ height: '3cm', border: '#fff solid', borderRadius: '50%', padding: '5%' }} />\r\n//                 </div>\r\n//                 <div className=\"col justify-content-start\">\r\n//                     <h5 className=\"pt-4 ml-2\" style={{ color: '#727377' }}> {item.type}</h5>\r\n//                     <h2 className=\"ml-2\"> {item.name}</h2>\r\n//                     <h5 className=\"pb-2 ml-2\" style={{ color: '#727377' }}>age : {age}</h5>\r\n//                 </div>\r\n//                 <div className=\"col-1 align-self-center\">\r\n//                     <Link to={{ pathname: \"/petProfile\", state: { pets, setPets } }}  key={item._id}\r\n//                         onClick={() => { localStorage.setItem('dogId', item._id); }}>\r\n//                         <ArrowForwardIosRoundedIcon className=\"align-self-center\" style={{ fontSize: '200%', color: '#6EA8FF' }}></ArrowForwardIosRoundedIcon></Link>\r\n//                 </div>\r\n//             </div>\r\n//         </React.Fragment>\r\n\r\n\r\n//         // <div key={item._id} style={{ display: 'flex', position: 'relative', marginTop: '20px', backgroundImage: 'linear-gradient(to right,gray,lightgray)', width: '30%', borderRadius: '10px', borderStyle: 'solid', borderColor: 'lightskyblue', borderWidth: '5px' }}>\r\n//         //     <img style={{ display: 'block', position: 'relative', width: '3cm', height: '3cm', borderRadius: '10px', left: '10%', marginTop: '20px' }} alt='cute dog' src={item.img} />\r\n//         //     <div style={{ display: 'block', position: 'absolute', flexDirection: 'column', marginTop: '20px', left: '50%' }} >\r\n//         //         <text style={{ display: 'flex' }} > name: {item.name}  </text>\r\n\r\n//         //         <text style={{ display: 'flex' }} > type: {item.type}  </text>\r\n\r\n//         //         <text style={{ display: 'flex' }} > age: {item.age} </text>\r\n//         //     </div>\r\n//         //     <NavLink to='/petProfile' onClick={() => {\r\n//         //         localStorage.setItem('dogId', item._id);\r\n//         //     }} style={{ display: 'block', position: 'absolute',right:'0.5cm', top: '1.5cm', width: '20px', height: '20px' }} ><ChevronRightIcon style={{ color: 'blue' }} /></NavLink>\r\n//         // </div>\r\n//     )\r\n\r\n// }\r\n\r\n\r\nconst MyPets = (props) => {\r\n    const [pets, setPets] = React.useState([]);\r\n    const [data, setData] = React.useState(false); // data retrieved from the server(y\\n)\r\n\r\n\r\n    //getting all the data of a specific user\r\n    React.useEffect(() => {\r\n        //if deleted in profile page then set state here.\r\n        if (props.location.state != null) {\r\n            if (props.location.state.petDeleted) {\r\n                deleted(props.location.state.petDeleted);\r\n            }\r\n        }\r\n\r\n        //if updated in profile page then set state here.\r\n        if (props.location.state != null) {\r\n            if (props.location.state.petEdited) {\r\n                edited(props.location.state.petEdited);\r\n            }\r\n        }\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://petwalkapp.herokuapp.com/pets/ofUser',\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then((data) => {\r\n                setPets(data.data);\r\n                setData(true);\r\n                return;\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n                alert('Sorry Something went wring');\r\n                return;\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const addMyPet = (item) => {\r\n        setPets(prevState => {\r\n            [...pets].push({\r\n                _id: item._id,\r\n                name: item.name,\r\n                type: item.type,\r\n                age: item.age,\r\n                weight: item.weight,\r\n                gender: item.gender,\r\n                activityLevel: item.activityLevel,\r\n                foodLevel: item.foodLevel,\r\n                dayPlanLevel: item.dayPlanLevel,\r\n                dayPlan: item.dayPlan,\r\n                hobbies: item.hobbies\r\n            });\r\n        })\r\n    }\r\n\r\n    const deleted = (id) => {\r\n        setPets(prevState => prevState.filter(({ _id }) => _id !== id));\r\n        //after deleted in page set the props to starting --null\r\n        props.location.state = null;\r\n    }\r\n\r\n    const edited = (item) => {\r\n        console.log(\"d\");\r\n        //setPets(prevState => prevState.filter(({ _id }) => _id !== id));\r\n    }\r\n\r\n\r\n    const showPets = (item) => {\r\n        let age = (item.age === undefined) ? \"Forever Young\" : item.age;\r\n        return (\r\n            <React.Fragment>\r\n                <div key={item._id} className='row p-3 mt-4 justify-content-between btn_section'>\r\n                    <div className=\"col d-flex justify-content-center align-items-center\">\r\n                        <img src={item.img} alt={item.name} className=\"img_pet\" style={{ height: '3cm', border: '#fff solid', borderRadius: '50%', padding: '5%' }} />\r\n                    </div>\r\n                    <div className=\"col justify-content-start\">\r\n                        <h5 className=\"pt-4 ml-2\" style={{ color: '#727377' }}> {item.type}</h5>\r\n                        <h2 className=\"ml-2\"> {item.name}</h2>\r\n                        <h5 className=\"pb-2 ml-2\" style={{ color: '#727377' }}>age : {age}</h5>\r\n                    </div>\r\n                    <div className=\"col-1 align-self-center\">\r\n                        <Link to={{ pathname: \"/petProfile\", state: { pet_id: item._id } }} >\r\n                            <ArrowForwardIosRoundedIcon className=\"align-self-center\" style={{ fontSize: '200%', color: '#6EA8FF' }}></ArrowForwardIosRoundedIcon></Link>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    console.log(props.location.state);\r\n    if (props.location.state != null) {\r\n        console.log(props.location.state.petEdited);\r\n        console.log(props.location.state.petDeleted);\r\n    }\r\n    console.log(pets);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <div className=\"mt-2\">\r\n                        <Link to={{ pathname: \"/myInfo\", state: { pets, setPets } }} className=\"py-2\" ><ArrowBackIcon style={{ fontSize: 'xx-large', color: 'black' }}></ArrowBackIcon></Link>\r\n                        <h1 className=\"py-2\">My Pets</h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    {data ? pets.map(showPets) : <Loading />}\r\n                </div>\r\n                <div className=\"col-auto text-center mt-5\" style={{ marginBottom: '10%' }}>\r\n                    <Link to={{ pathname: '/addPet' }} style={{ borderRadius: '50%' }} className=\"btn-lg btns_blue my-4\"><AddIcon /></Link>\r\n                </div>\r\n            </main>\r\n            <footer> <Navbar namePage={'myPets'} /> </footer>\r\n        </React.Fragment>\r\n\r\n\r\n        // <Grid style={{backgroundColor:'lightgray'}} >\r\n        //     <h1 style={{ display: 'block', position: 'absolute', width: '10%', top: '1.5cm', left: '15%' }}>My Pets</h1>\r\n        //     <div style={{ display: 'flex', width: '100%', flexDirection: 'column', alignItems: 'center', justifyContent: 'space-evenly' }} /*className='general-container'*/ >\r\n        //         {\r\n        //             pets.map(showPets)\r\n        //         }\r\n        //         <NavLink to='/addPet' ><Button style={{ backgroundColor: 'blue', color: 'white', marginTop: '1.5cm',marginBottom:'2cm', borderRadius: '50%', height: '55px', fontSize: '20px' }} >+</Button></NavLink>\r\n        //         <Navbar namePage={'myPets'} />\r\n        //     </div>\r\n        // </Grid>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default MyPets\r\n\r\n\r\n/*<div style={{ display: 'flex', position: 'absolute', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', backgroundColor: 'lightgray' }}>*/\r\n\r\n/*</div>*/","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Intro.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Login.js",["153","154","155","156","157","158"],"import { Button } from '@material-ui/core'\r\nimport * as React from 'react';\r\nimport '../../App.css';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Joi from 'joi-browser';\r\n\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = React.useState('');\r\n    const [pass, setPass] = React.useState(null);\r\n    const [errors, setError] = React.useState({});\r\n\r\n\r\n    const joiSchema = {\r\n        email: Joi.string().email().required(),\r\n        pass: Joi.string().required()\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n\r\n        const our_data = {\r\n            email: email,\r\n            pass: pass,\r\n        }\r\n        let errors = {};\r\n\r\n        //chack valid form inputs\r\n        const valid = Joi.validate(our_data, joiSchema, {\r\n            abortEarly: false\r\n        });\r\n        if (valid.error) {\r\n            valid.error.details.forEach(err => {\r\n                console.log(err.message);\r\n                if (err.message == '\"email\" is not allowed to be empty') {\r\n                    errors[\"email\"] = \"* Email is required.\";\r\n                }\r\n                else if (err.message == '\"email\" must be a valid email') {\r\n                    errors[\"email\"] = \"* Invalid Email\";\r\n                }\r\n                if (err.message == '\"pass\" is not allowed to be empty') {\r\n                    errors[\"pass\"] = \"* Password is required.\";\r\n                }\r\n            })\r\n            setError(errors);\r\n            return;\r\n        }\r\n        //ok:\r\n        else {\r\n            axios({\r\n                method: 'POST',\r\n                url: 'https://petwalkapp.herokuapp.com/users/login',\r\n                data: {\r\n                    \"email\": email,\r\n                    \"pass\": pass\r\n                }\r\n            })\r\n                .then((data) => {\r\n                    console.log(data.data.token);\r\n                    localStorage.setItem(\"token\", data.data.token);\r\n                    window.location.href = \"/myInfo\";\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response);\r\n                    let errors = {};\r\n                    if (error.response.status == Number(401)) {\r\n                        errors[\"email\"] = \"* Email not found\";\r\n                    }\r\n                    if (error.response.status == Number(400)) {\r\n                        console.log(error.response.status);\r\n                        errors[\"psss\"] = \"* Password incorrect\";\r\n                    }\r\n                    if (error.response.status == 500) {\r\n                        alert(\"Server Error , Try later\");\r\n                    }\r\n                    setError(errors);\r\n                    return;\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main className=\"container-fluid\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <div className=\"text-center\">\r\n                            <h1 className=\" m-4 pt-4\">Login</h1>\r\n                            <div style={{ maxWidth: '50px', maxheight: '50px', backgroundColor: '#ffffff', borderRadius: '50%' }}>\r\n                            </div>\r\n                            <img src=\"https://banner2.cleanpng.com/20181231/fta/kisspng-computer-icons-user-profile-portable-network-graph-circle-svg-png-icon-free-download-5-4714-onli-5c2a3809d6e8e6.1821006915462707298803.jpg\"\r\n                                alt=\"Avatar\" style={{ maxWidth: '30%', borderRadius: '50%' }} />\r\n                        </div>\r\n\r\n                        <form>\r\n                            <div className=\"form_div pb-4 pt-4\">\r\n                                <label>Email:</label>\r\n                                <input type=\"text\" id=\"id_email\" className=\"form-control form-control-lg\" onChange={(event) => { setEmail(event.target.value) }}\r\n                                    style={{ borderColor: '#ffffff' }} />\r\n                                <div className=\"text-danger\">{errors.email}</div>\r\n                            </div>\r\n                            <div className=\"form_div pb-2\">\r\n                                <label>Password:</label>\r\n                                <input type=\"password\" id=\"id_pass\" className=\"form-control form-control-lg\" onChange={(event) => { setPass(event.target.value) }}\r\n                                    style={{ bordercolor: '#ffffff' }} />\r\n                                <div className=\"text-danger\">{errors.pass}</div>\r\n                            </div>\r\n                            <Button onClick={handleClick} className=\"btn btn-lg btn-block btns my-4 w-100\">Login</Button>\r\n                        </form>\r\n\r\n                        <div className=\"pt-4 justify-content-center text-center\">\r\n                            <div className=\"row p-3 justify-content-center\">\r\n                                <div className=\"col-4\" style={{ backgroundColor: '#727377', height: '3px' }}> </div>\r\n                            </div>\r\n                            <p className=\"pt-2\">Don't have an Account! <NavLink to='/register'>Sign Up Here</NavLink></p>\r\n                            <p>Forgot <NavLink to='/helpPage'>Password?</NavLink></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\PetProfile.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176"],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\EditPet.js",["177","178"],"import * as React from 'react'\r\nimport Navbar from '../RepeatingComponents/Navbar'\r\nimport { Button, Grid, MenuItem, TextField } from '@material-ui/core';\r\n//import { Label } from '@material-ui/icons';\r\nimport '../../App.css'\r\nimport { Select } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\nconst EditPet = (props) => {\r\n    console.log(props.location.state);\r\n    if (props.location.state != null) {\r\n        console.log(props.location.state.pet_id);\r\n    }\r\n\r\n\r\n    const [dogType, setDogType] = React.useState('none')\r\n    const [dogName, setDogName] = React.useState('')\r\n    const [dogGender, setDogGender] = React.useState('Male')\r\n    const [dogAge, setDogAge] = React.useState('')\r\n    const [dogWeight, setDogWeight] = React.useState('')\r\n    const [dogPlan, setDogPlan] = React.useState('')\r\n    const [activityLevel, setActivityLevel] = React.useState(null)\r\n    const [foodLevel, setFoodLevel] = React.useState(null)\r\n    const [dayPlanLevel, setDayPlanLevel] = React.useState(null)\r\n    const [hobbies, setHobbies] = React.useState(\"\")\r\n    const [bio, setBio] = React.useState(\"\")\r\n    const [dogImg, setDogImg] = React.useState(\"\")\r\n\r\n\r\n    React.useEffect(() => {\r\n            axios({\r\n            method: 'GET',\r\n            url: `https://petwalkapp.herokuapp.com/pets/ofUser/${props.location.state.pet_id}`,\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then((data) => {\r\n                const dogInfo = data.data[0]\r\n                console.log(dogInfo)\r\n                setDogName(dogInfo.name)\r\n                setDogType(dogInfo.type)\r\n                setDogAge(dogInfo.age)\r\n                setDogWeight(dogInfo.weight)\r\n                setDogGender(dogInfo.gender)\r\n                setDogPlan(dogInfo.dayPlan)\r\n                setActivityLevel(dogInfo.activityLevel)\r\n                setFoodLevel(dogInfo.foodLevel)\r\n                setDayPlanLevel(dogInfo.dayPlanLevel)\r\n                setHobbies(dogInfo.hobbies)\r\n                setBio(dogInfo.bio)\r\n                setDogImg(dogInfo.img)\r\n\r\n                return\r\n            })\r\n            .catch((err) => {\r\n                if (err)\r\n                    console.log(err)\r\n\r\n            })\r\n    },[])\r\n\r\n    let dogData={};\r\n    const editPet = async() =>{\r\n        const age = (Number)(dogAge)\r\n        const weight = (Number)(dogWeight)\r\n        const activityLevelAsNum = (Number)(activityLevel)\r\n        const foodLevelAsNum = (Number)(foodLevel)\r\n        const dayPlanLvlAsNum = (Number)(dayPlanLevel)\r\n\r\n\r\n        dogData = {\r\n            id: props.location.state.pet_id,\r\n            name: dogName,\r\n            type: dogType,\r\n            age: age,\r\n            weight: weight,\r\n            gender: dogGender,\r\n            activityLevel: activityLevelAsNum,\r\n            foodLevel: foodLevelAsNum,\r\n            dayPlan: dogPlan,\r\n            dayPlanLevel: dayPlanLvlAsNum,\r\n            hobbies: hobbies,\r\n            bio: bio,\r\n            img: dogImg\r\n        }\r\n        \r\n        console.log(\"in\", dogData)\r\n\r\n        await axios({\r\n            method: 'PUT',\r\n            url: 'https://petwalkapp.herokuapp.com/pets',\r\n            headers:{\r\n                \"x-auth-token\": localStorage[\"token\"]\r\n            },\r\n            data: dogData\r\n        })\r\n        .then((data)=>{\r\n            console.log(data)\r\n        })\r\n        .catch((err)=>{\r\n            if(err)\r\n            console.log(\"problem with updating the dog's info: \"+err)\r\n        })\r\n    \r\n\r\n    }\r\n\r\n    return (\r\n        <Grid style={{ backgroundColor: 'lightgray' }}>\r\n            <div id='add-pet-container' /*className='general-container'*/>\r\n                <img alt='dog image' src={dogImg} style={{ display: 'block', width: '100px', height: '100px' }} />\r\n                <input className='add-pet-input' type='file' />\r\n                <TextField className='add-pet-input' type='text' value={dogName} label='Pet Name...' onChange={(event) => { setDogName(event.target.value) }} />\r\n                <Select className='add-pet-input' value={dogType} onChange={(event) => { setDogType(event.target.value) }}>\r\n                    <MenuItem selected value='none' >dog type</MenuItem>\r\n                    <MenuItem value='German Shephard' >German Shephard</MenuItem>\r\n                    <MenuItem value='Bulldog' >Bulldog</MenuItem>\r\n                    <MenuItem value='Golden Retriever' >Golden Retriever</MenuItem>\r\n                    <MenuItem value='Wienner' >Wienner</MenuItem>\r\n                    <MenuItem value='Shitzu' >Shitzu</MenuItem>\r\n                    <MenuItem value='st. bernard' >St. Bernard</MenuItem>\r\n                </Select>\r\n                <Select className='add-pet-input' value={dogGender} onChange={(event) => { setDogGender(event.target.value) }}>\r\n                    <MenuItem selected value='Male' >Male</MenuItem>\r\n                    <MenuItem value='Female' >Female</MenuItem>\r\n                </Select>\r\n                <div className='add-pet-input' style={{ flexDirection: 'row' }} >\r\n                    <TextField label='age...' className='add-pet-input-side-by-side' type='number' value={dogAge} onChange={(event) => { setDogAge(event.target.value) }} />\r\n                    <TextField label='weight' className='add-pet-input-side-by-side' type='number' placeholder='KGs' value={dogWeight} onChange={(event) => { setDogWeight(event.target.value) }} />\r\n                </div>\r\n                <TextField multiline={true} rows={2} id=\"plan-textfield\" className='add-pet-input' type='text' value={dogPlan} label='daily plan...' onChange={(event) => { setDogPlan(event.target.value) }} />\r\n                <div className='add-pet-input' style={{ flexDirection: 'row' }} >\r\n                    <TextField label='Day Plan Level...' className='add-pet-input-side-by-side-2' type='number' value={dayPlanLevel} onChange={(event) => { setDayPlanLevel(event.target.value) }} />\r\n                    <TextField label='Food Level...' className='add-pet-input-side-by-side-2' type='number' value={foodLevel} onChange={(event) => { setFoodLevel(event.target.value) }} />\r\n                    <TextField label='Activity Level' className='add-pet-input-side-by-side-2' type='number' value={activityLevel} onChange={(event) => { setActivityLevel(event.target.value) }} />\r\n                </div>\r\n                <TextField multiline={true} rows={2} id=\"plan-textfield\" className='add-pet-input' type='text' value={hobbies} label='Hobbies...' onChange={(event) => { setHobbies(event.target.value) }} />\r\n                <TextField multiline={true} rows={2} id=\"plan-textfield\" className='add-pet-input' type='text' value={bio} label='Bio...' onChange={(event) => { setBio(event.target.value) }} />\r\n                <Link to={{ pathname: \"/petProfile\", state: { edited:true, pet_id: props.location.state.pet_id , name: dogName, type: dogType, gender:dogGender, age:dogAge, bio: bio, hobbies:hobbies, weight:dogWeight, dogWeight,dogPlan:dogPlan,activityLevel:activityLevel,foodLevel:foodLevel,dayPlanLevel:dayPlanLevel,dogImg:dogImg } }} ><Button style={{ backgroundColor: 'blue', borderRadius: '100px',marginTop:'0.5cm',marginBottom:'2.5cm' }}\r\n                \r\n\r\n                // dogWeight,dogPlan:dogPlan,activityLevel:activityLevel,foodLevel:foodLevel,dayPlanLevel:dayPlanLevel,dogImg:dogImg\r\n\r\n                onClick={editPet}\r\n                \r\n                // { async () => {\r\n                //     const age = (Number)(dogAge)\r\n                //     const weight = (Number)(dogWeight)\r\n                //     const activityLevelAsNum = (Number)(activityLevel)\r\n                //     const foodLevelAsNum = (Number)(foodLevel)\r\n                //     const dayPlanLvlAsNum = (Number)(dayPlanLevel)\r\n\r\n                //     const dogData = {\r\n                //         \"id\": props.location.state.pet_id,\r\n                //         \"name\": dogName,\r\n                //         \"type\": dogType,\r\n                //         \"age\": age,\r\n                //         \"weight\": weight,\r\n                //         \"gender\": dogGender,\r\n                //         \"activityLevel\": activityLevelAsNum,\r\n                //         \"foodLevel\": foodLevelAsNum,\r\n                //         \"dayPlan\": dogPlan,\r\n                //         \"dayPlanLevel\": dayPlanLvlAsNum,\r\n                //         \"hobbies\": hobbies,\r\n                //         \"bio\": bio,\r\n                //         \"img\": dogImg\r\n                //     }\r\n                    \r\n                //     console.log(\"in the put axios call\\n\"+dogData)\r\n\r\n                //     await axios({\r\n                //         method: 'put',\r\n                //         url: 'https://petwalkapp.herokuapp.com/pets',\r\n                //         headers:{\r\n                //             \"x-auth-token\": localStorage[\"token\"]\r\n                //         },\r\n                //         data: dogData\r\n                //     })\r\n                //     .then((data)=>{\r\n                //         console.log(data)\r\n                //     })\r\n                //     .catch((err)=>{\r\n                //         if(err)\r\n                //         console.log(\"problem with updating the dog's info: \"+err)\r\n                //     })\r\n                //}} \r\n                >Save Changes</Button></Link>\r\n                <Navbar />\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default EditPet","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\RepeatingComponents\\Navbar.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\RepeatingComponents\\Loading.js",["179","180"],"import * as React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div></div>\r\n            <div className=\"text-center mr-3 w-100\">\r\n                <img src=\"images/loading-dog.gif\" width=\"200\" />\r\n            </div>\r\n            <div></div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Loading","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Chart.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\RepeatingComponents\\SearchClass.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\CommunityItem.js",["181","182"],"import * as React from 'react'\r\nimport FooterCommunity from './FooterCommunity';\r\nimport FooterMyCommunity from './FooterMyCommunity';\r\n\r\n\r\nconst CommunityItem = (props) => {\r\n    const {  item, title, page, deleteItem , editItem} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n                  <div key={item._id} className=\"card col-md-4 col-8 m-3\">\r\n                <div style={{ padding: '.75rem 1.25rem' }}>\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-10 w-100\">\r\n                            <img src={item.img} style={{ borderRadius: '50%', width: '40%', height: '120%', padding: '5%' }} />\r\n                            {title}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <img className=\"card-img-top\" src={item.img} alt=\"Card image\" />\r\n                <div className=\"card-body\">\r\n                    <div className=\"row p-2 fafa justify-content-between\">\r\n                        {page === 'community'\r\n                            ? <FooterCommunity/>\r\n                            :<FooterMyCommunity  editItem={() => {editItem(item._id)}} deleteItem={() => {deleteItem(item._id)}}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CommunityItem","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\Community.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\MyCommunity.js",["183","184"],"import * as React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../../App.css';\r\nimport axios from 'axios';\r\nimport Navbar from '../../RepeatingComponents/Navbar';\r\nimport Loading from '../../RepeatingComponents/Loading';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchClass from '../../RepeatingComponents/SearchClass';\r\nimport CommunityList from './CommunityList';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nconst MyCommunity = () => {\r\n    const [communities, setCommunities] = React.useState([]);\r\n    const [data, setData] = React.useState(false); // data retrieved from the server(y\\n)\r\n    const [search, setSearch] = React.useState('');\r\n\r\n    const onSearch = (search) => {\r\n        setSearch(search.toLowerCase());\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        //get users only   \r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://petwalkapp.herokuapp.com/socialNetworks/ofUser',\r\n            headers: {\r\n                \"x-auth-token\": localStorage[\"token\"],\r\n            }\r\n        })\r\n            .then((data) => {\r\n                console.log(data.data);\r\n                setCommunities(data.data);\r\n                setData(true);\r\n                return;\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                return;\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    const deleteItem = (deleteId) => {\r\n        console.log(deleteId);\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                //delete from db:\r\n                axios({\r\n                    method: 'DELETE',\r\n                    url:`https://petwalkapp.herokuapp.com/socialNetworks/${deleteId}`,\r\n                    headers: {\r\n                        \"x-auth-token\": localStorage[\"token\"]\r\n                    }\r\n                })\r\n                    .then(myData => {\r\n                        Swal.fire(\r\n                            'Deleted!',\r\n                            'Your Community has been deleted.',\r\n                            'success'\r\n                          )\r\n                        //set state:\r\n                        setCommunities(prevState => prevState.filter(({ _id }) => _id !== deleteId));\r\n                        return;\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error.response);\r\n                        if (error.response.status == Number(401)) {\r\n                            alert(\"Pet is not found\");\r\n                        }\r\n                        if (error.response.status == 500) {\r\n                            alert(\"Server Error , Try later\");\r\n                        }\r\n                        return;\r\n                    })\r\n            }\r\n          })\r\n        // setCommunities(prevState => prevState.filter(({ _id }) => _id !== deleteId));\r\n    };\r\n\r\n    const editItem = async(editId) => {\r\n        console.log(editId);\r\n        //elements\r\n        let dataBodyVal = {\r\n            img: '',\r\n            type: '',\r\n            title: '',\r\n        }\r\n        //lightbox form :\r\n        const { value: formValues } = await Swal.fire({\r\n            title: 'Edit Community',\r\n            html:\r\n              '<input id=\"swal-input0\" type=\"file\" class=\"swal2-input\" >' +\r\n              '<input id=\"swal-input1\" class=\"swal2-input\" value=\"aaa\" >' +\r\n              '<input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"Type\" >',\r\n            focusConfirm: false,\r\n            preConfirm: () => {\r\n              return [\r\n                dataBodyVal.img = document.getElementById('swal-input0').value,\r\n                dataBodyVal.title = document.getElementById('swal-input1').value,\r\n                dataBodyVal.type = document.getElementById('swal-input2').value\r\n              ]\r\n            }\r\n          })\r\n          \r\n          if (formValues) {\r\n            Swal.fire(JSON.stringify(formValues))\r\n          }\r\n         console.log(dataBodyVal);\r\n         setCommunities(myPets=> myPets.map(data => data._id !== editId ? data : { ...data, title: dataBodyVal.title }));\r\n   \r\n    };\r\n\r\n    const communityList = communities.filter(todo => todo.title.toString().toLowerCase().includes(search));\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <div className=\"mt-2\">\r\n                        <Link className=\"py-4\" to=\"/community\"><ArrowBackIcon></ArrowBackIcon></Link>\r\n                        <h1 className=\"py-4\">My Community</h1>\r\n                    </div>\r\n                    <SearchClass onSearch={onSearch} />\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-auto text-center mt-3\">\r\n                        <Link to='/myCommunity/new' style={{ borderRadius: '50%' }} className=\"btn-lg btns_blue\"><AddIcon /></Link>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        {data ? <CommunityList page={'myCommunity'} communities={communities} communityList={communityList} deleteItem={deleteItem} editItem={editItem}/> : <Loading />}\r\n                    </div>\r\n                </div>\r\n            </main>\r\n            <footer> <Navbar namePage={'community'} /> </footer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MyCommunity","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\CommunityList.js",["185","186"],"import * as React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport '../../../App.css';\r\nimport CommunityItem from './CommunityItem';\r\n\r\n\r\nconst CommunityList = (props) => {\r\n    const {communities,communityList,page,deleteItem,editItem} = props;\r\n\r\n    return (\r\n        communityList.map(item =><CommunityItem key={item._id} item={item} title={item.title} page={page} editItem={() => {editItem(item._id);}} deleteItem={() => {deleteItem(item._id);}}/>)\r\n    )\r\n}\r\n\r\nexport default CommunityList","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\FooterCommunity.js",["187"],"import * as React from 'react';\r\nimport '../../../App.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from 'react-router-dom';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\n\r\n\r\nconst FooterCommunity = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"#\" ><StarIcon /></Link>\r\n            <ChatBubbleOutlineIcon />\r\n            <FacebookIcon />\r\n            <TwitterIcon />\r\n            <InstagramIcon />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default FooterCommunity","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\FooterMyCommunity.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\AddCommunity.js",["188","189","190"],"import * as React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../../App.css';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Navbar from '../../RepeatingComponents/Navbar';\r\nimport Loading from '../../RepeatingComponents/Loading';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100px'\r\n    },\r\n}));\r\n\r\nconst AddCommunity = () => {\r\n    const [currency, setCurrency] = React.useState('$');\r\n    const classes = useStyles();\r\n\r\n    const currencies = [\r\n        {\r\n            value: 'USD',\r\n            label: '$',\r\n        },\r\n        {\r\n            value: 'EUR',\r\n            label: '€',\r\n        },\r\n        {\r\n            value: 'BTC',\r\n            label: '฿',\r\n        },\r\n        {\r\n            value: 'JPY',\r\n            label: '¥',\r\n        },\r\n    ];\r\n\r\n    const handleChange = (event) => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <div className=\"mt-2\">\r\n                        <Link className=\"py-4\" to=\"/mycommunity\"><ArrowBackIcon></ArrowBackIcon></Link>\r\n                        <h1 className=\"py-4\">Add Community</h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"container-fluid\">\r\n                <div className=\"container\">\r\n                    <div className=\"add_form\">\r\n                        <div className=\"text-center\">\r\n                            <img src=\"https://i.pinimg.com/originals/f6/af/e8/f6afe8801e93598525796c47afd9f3c0.png\" alt=\"PetPic\" style={{ maxWidth: '30%', borderRadius: '50%', backgroundColor: 'azure' }} />\r\n                        </div>\r\n\r\n                        <div className=\"col-auto text-center\">\r\n                            <input className=\"btn btn-primary btn-lg my-4 w-75\" type=\"file\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form>\r\n                        <TextField id=\"outlined-basic\" label=\"Title\" variant=\"outlined\" className=\"w-100 mb-5\" />\r\n                        <TextField id=\"outlined-basic\" label=\"Type\" variant=\"outlined\" className=\"w-100 mb-5\" />\r\n                        <TextField className=\"w-100 mb-5\"\r\n                            classes={{ root: classes.root }}\r\n                            id=\"outlined-select-currency\"\r\n                            select\r\n                            label=\"Select\"\r\n                            value={currency}\r\n                            helperText=\"Please select your currency\"\r\n                            variant=\"outlined\"\r\n                            SelectProps={{\r\n                                multiple: true,\r\n                                value: []\r\n                            }}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {currencies.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n\r\n                        <button type=\"submit\" className=\"btn-lg btn-block my-4 w-100 btns_blue\">Add\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        </React.Fragment >\r\n    );\r\n}\r\n\r\nexport default AddCommunity","C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\Community\\test.js",[],"C:\\Users\\shani\\Desktop\\reactPro\\26.1\\pet_walk_client\\src\\Components\\MainComponents\\AcordionProfile.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":11,"column":13,"nodeType":"197","endLine":11,"endColumn":166},{"ruleId":"198","severity":1,"message":"199","line":21,"column":12,"nodeType":"200","messageId":"201","endLine":21,"endColumn":21},{"ruleId":"198","severity":1,"message":"202","line":8,"column":9,"nodeType":"200","messageId":"201","endLine":8,"endColumn":13},{"ruleId":"198","severity":1,"message":"203","line":9,"column":8,"nodeType":"200","messageId":"201","endLine":9,"endColumn":21},{"ruleId":"198","severity":1,"message":"204","line":27,"column":11,"nodeType":"200","messageId":"201","endLine":27,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":47,"column":17,"nodeType":"197","endLine":47,"endColumn":115},{"ruleId":"198","severity":1,"message":"205","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":16},{"ruleId":"198","severity":1,"message":"206","line":8,"column":10,"nodeType":"200","messageId":"201","endLine":8,"endColumn":13},{"ruleId":"207","severity":1,"message":"208","line":47,"column":8,"nodeType":"209","endLine":47,"endColumn":10,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":51,"column":22,"nodeType":"213","messageId":"214","endLine":51,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":66,"column":22,"nodeType":"213","messageId":"214","endLine":66,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":109,"column":43,"nodeType":"213","messageId":"214","endLine":109,"endColumn":45},{"ruleId":"211","severity":1,"message":"212","line":112,"column":43,"nodeType":"213","messageId":"214","endLine":112,"endColumn":45},{"ruleId":"211","severity":1,"message":"212","line":148,"column":43,"nodeType":"213","messageId":"214","endLine":148,"endColumn":45},{"ruleId":"211","severity":1,"message":"212","line":151,"column":43,"nodeType":"213","messageId":"214","endLine":151,"endColumn":45},{"ruleId":"211","severity":1,"message":"212","line":201,"column":43,"nodeType":"213","messageId":"214","endLine":201,"endColumn":45},{"ruleId":"211","severity":1,"message":"212","line":204,"column":43,"nodeType":"213","messageId":"214","endLine":204,"endColumn":45},{"ruleId":"211","severity":1,"message":"212","line":245,"column":41,"nodeType":"213","messageId":"214","endLine":245,"endColumn":43},{"ruleId":"211","severity":1,"message":"212","line":279,"column":31,"nodeType":"213","messageId":"214","endLine":279,"endColumn":33},{"ruleId":"211","severity":1,"message":"212","line":313,"column":31,"nodeType":"213","messageId":"214","endLine":313,"endColumn":33},{"ruleId":"211","severity":1,"message":"212","line":347,"column":31,"nodeType":"213","messageId":"214","endLine":347,"endColumn":33},{"ruleId":"211","severity":1,"message":"212","line":356,"column":27,"nodeType":"213","messageId":"214","endLine":356,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":360,"column":41,"nodeType":"213","messageId":"214","endLine":360,"endColumn":43},{"ruleId":"211","severity":1,"message":"212","line":361,"column":77,"nodeType":"213","messageId":"214","endLine":361,"endColumn":79},{"ruleId":"211","severity":1,"message":"212","line":362,"column":79,"nodeType":"213","messageId":"214","endLine":362,"endColumn":81},{"ruleId":"211","severity":1,"message":"212","line":363,"column":71,"nodeType":"213","messageId":"214","endLine":363,"endColumn":73},{"ruleId":"198","severity":1,"message":"215","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":15},{"ruleId":"198","severity":1,"message":"216","line":2,"column":17,"nodeType":"200","messageId":"201","endLine":2,"endColumn":23},{"ruleId":"198","severity":1,"message":"205","line":6,"column":10,"nodeType":"200","messageId":"201","endLine":6,"endColumn":16},{"ruleId":"198","severity":1,"message":"217","line":6,"column":18,"nodeType":"200","messageId":"201","endLine":6,"endColumn":22},{"ruleId":"198","severity":1,"message":"218","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":24},{"ruleId":"198","severity":1,"message":"219","line":8,"column":16,"nodeType":"200","messageId":"201","endLine":8,"endColumn":23},{"ruleId":"198","severity":1,"message":"220","line":9,"column":8,"nodeType":"200","messageId":"201","endLine":9,"endColumn":18},{"ruleId":"198","severity":1,"message":"221","line":13,"column":8,"nodeType":"200","messageId":"201","endLine":13,"endColumn":18},{"ruleId":"207","severity":1,"message":"222","line":97,"column":8,"nodeType":"209","endLine":97,"endColumn":10,"suggestions":"223"},{"ruleId":"198","severity":1,"message":"224","line":102,"column":11,"nodeType":"200","messageId":"201","endLine":102,"endColumn":19},{"ruleId":"211","severity":1,"message":"212","line":37,"column":33,"nodeType":"213","messageId":"214","endLine":37,"endColumn":35},{"ruleId":"211","severity":1,"message":"212","line":40,"column":38,"nodeType":"213","messageId":"214","endLine":40,"endColumn":40},{"ruleId":"211","severity":1,"message":"212","line":43,"column":33,"nodeType":"213","messageId":"214","endLine":43,"endColumn":35},{"ruleId":"211","severity":1,"message":"212","line":68,"column":47,"nodeType":"213","messageId":"214","endLine":68,"endColumn":49},{"ruleId":"211","severity":1,"message":"212","line":71,"column":47,"nodeType":"213","messageId":"214","endLine":71,"endColumn":49},{"ruleId":"211","severity":1,"message":"212","line":75,"column":47,"nodeType":"213","messageId":"214","endLine":75,"endColumn":49},{"ruleId":"198","severity":1,"message":"205","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":16},{"ruleId":"198","severity":1,"message":"217","line":4,"column":18,"nodeType":"200","messageId":"201","endLine":4,"endColumn":22},{"ruleId":"198","severity":1,"message":"225","line":11,"column":8,"nodeType":"200","messageId":"201","endLine":11,"endColumn":18},{"ruleId":"198","severity":1,"message":"219","line":12,"column":16,"nodeType":"200","messageId":"201","endLine":12,"endColumn":23},{"ruleId":"198","severity":1,"message":"226","line":29,"column":12,"nodeType":"200","messageId":"201","endLine":29,"endColumn":21},{"ruleId":"207","severity":1,"message":"227","line":77,"column":8,"nodeType":"209","endLine":77,"endColumn":10,"suggestions":"228"},{"ruleId":"211","severity":1,"message":"229","line":109,"column":38,"nodeType":"213","messageId":"214","endLine":109,"endColumn":40},{"ruleId":"211","severity":1,"message":"229","line":110,"column":38,"nodeType":"213","messageId":"214","endLine":110,"endColumn":40},{"ruleId":"211","severity":1,"message":"229","line":111,"column":37,"nodeType":"213","messageId":"214","endLine":111,"endColumn":39},{"ruleId":"211","severity":1,"message":"229","line":112,"column":40,"nodeType":"213","messageId":"214","endLine":112,"endColumn":42},{"ruleId":"211","severity":1,"message":"229","line":113,"column":40,"nodeType":"213","messageId":"214","endLine":113,"endColumn":42},{"ruleId":"211","severity":1,"message":"229","line":114,"column":47,"nodeType":"213","messageId":"214","endLine":114,"endColumn":49},{"ruleId":"211","severity":1,"message":"229","line":115,"column":41,"nodeType":"213","messageId":"214","endLine":115,"endColumn":43},{"ruleId":"211","severity":1,"message":"229","line":116,"column":46,"nodeType":"213","messageId":"214","endLine":116,"endColumn":48},{"ruleId":"211","severity":1,"message":"229","line":117,"column":41,"nodeType":"213","messageId":"214","endLine":117,"endColumn":43},{"ruleId":"211","severity":1,"message":"229","line":118,"column":41,"nodeType":"213","messageId":"214","endLine":118,"endColumn":43},{"ruleId":"211","severity":1,"message":"229","line":119,"column":37,"nodeType":"213","messageId":"214","endLine":119,"endColumn":39},{"ruleId":"211","severity":1,"message":"229","line":120,"column":40,"nodeType":"213","messageId":"214","endLine":120,"endColumn":42},{"ruleId":"207","severity":1,"message":"230","line":63,"column":7,"nodeType":"209","endLine":63,"endColumn":9,"suggestions":"231"},{"ruleId":"195","severity":1,"message":"196","line":114,"column":17,"nodeType":"197","endLine":114,"endColumn":115},{"ruleId":"198","severity":1,"message":"219","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":17},{"ruleId":"232","severity":1,"message":"233","line":10,"column":17,"nodeType":"197","endLine":10,"endColumn":65},{"ruleId":"232","severity":1,"message":"233","line":15,"column":29,"nodeType":"197","endLine":15,"endColumn":128},{"ruleId":"195","severity":1,"message":"196","line":20,"column":17,"nodeType":"197","endLine":20,"endColumn":81},{"ruleId":"211","severity":1,"message":"212","line":79,"column":51,"nodeType":"213","messageId":"214","endLine":79,"endColumn":53},{"ruleId":"211","severity":1,"message":"212","line":82,"column":51,"nodeType":"213","messageId":"214","endLine":82,"endColumn":53},{"ruleId":"198","severity":1,"message":"234","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":18},{"ruleId":"198","severity":1,"message":"235","line":8,"column":12,"nodeType":"200","messageId":"201","endLine":8,"endColumn":23},{"ruleId":"198","severity":1,"message":"234","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":18},{"ruleId":"198","severity":1,"message":"236","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":13},{"ruleId":"198","severity":1,"message":"237","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":14},{"ruleId":"198","severity":1,"message":"238","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":15},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'fullArray' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'ArrowBackIcon' is defined but never used.","'addPet' is assigned a value but never used.","'Button' is defined but never used.","'Pie' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'data' and 'petIndex'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setActiviry' needs the current value of 'petIndex'.","ArrayExpression",["241"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Route' is defined but never used.","'Switch' is defined but never used.","'Grid' is defined but never used.","'ChevronRightIcon' is defined but never used.","'NavLink' is defined but never used.","'MediaQuery' is defined but never used.","'PetProfile' is defined but never used.","React Hook React.useEffect has missing dependencies: 'deleted' and 'props.location.state'. Either include them or remove the dependency array.",["242"],"'addMyPet' is assigned a value but never used.","'CreateIcon' is defined but never used.","'dogWeight' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'editPet', 'props.location.state.edited', and 'props.location.state.pet_id'. Either include them or remove the dependency array. If 'setDogId' needs the current value of 'props.location.state.pet_id', you can also switch to useReducer instead of useState and read 'props.location.state.pet_id' in the reducer.",["243"],"Expected '!==' and instead saw '!='.","React Hook React.useEffect has a missing dependency: 'props.location.state.pet_id'. Either include it or remove the dependency array.",["244"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'SearchIcon' is defined but never used.","'communities' is assigned a value but never used.","'axios' is defined but never used.","'Navbar' is defined but never used.","'Loading' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [data, petIndex]",{"range":"253","text":"254"},"Update the dependencies array to be: [deleted, props.location.state]",{"range":"255","text":"256"},"Update the dependencies array to be: [editPet, props.location.state.edited, props.location.state.pet_id]",{"range":"257","text":"258"},"Update the dependencies array to be: [props.location.state.pet_id]",{"range":"259","text":"260"},[1765,1767],"[data, petIndex]",[4572,4574],"[deleted, props.location.state]",[3187,3189],"[editPet, props.location.state.edited, props.location.state.pet_id]",[2308,2310],"[props.location.state.pet_id]"]